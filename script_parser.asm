; ########################################################################################
; # Generated by the active disassembly feature of the Exodus emulation platform
; #
; # Creation Date:   2020-11-26 11:22:26
; # Analysis Region: 0x00003A70 - 0x00003B0A
; # script parser, control code handler
; ########################################################################################

	org $00003A70

CurrentChar	equr	d2	; data register with current character code
StringROMOffset	equr	a0	; address register with start of string in ROM
StringRAMOffset	equr	a1	; RAM offset for current character
CharROMOffset	equr	a2	; address register with current character position in ROM


ScriptParser:
	CLR.w	CurrentChar
	MOVE.b	(CharROMOffset)+, CurrentChar
	BEQ.w	*+$8A ; should be $88	; check if code is $00 (end of line marker)
	CMPI.b	#3, CurrentChar 	; check if code is $01,$02 (for kanji, multi-byte variables)
	BCC.b	CharGTE3 	; skip next two lines if CurrentChar is >= 3

CharLT3:
	MOVE.b	CurrentChar, (StringRAMOffset)+	; if it's multibyte, put byte in RAM and grab next byte
	MOVE.b	(CharROMOffset)+, (StringRAMOffset)+	; move next byte straight into RAM as well
	BRA.B	ScriptParser	; return to top

CharGTE3:
	BNE.b	CharNot3
	MOVEA.l	(A6)+, StringROMOffset	

	Unk1:
		MOVE.b	(StringROMOffset)+, D3	
		BEQ.b	Unk2	
		CMPI.b	#3, D3	
		BCC.b	*+$6	; add 2 cuz asm68k is the devil
		MOVE.b	D3, (StringRAMOffset)+	
		MOVE.b	(StringROMOffset)+, D3	
		MOVE.b	D3, (StringRAMOffset)+	
		BRA.b	Unk1	
		
Unk2:
	BRA.b	ScriptParser	
	
CharNot3:
	CMPI.b	#4, CurrentChar
	BNE.b	*+$12						; add 2 cuz asm68k is the devil
	MOVE.l	(A6)+, CurrentChar
	CLR.w	D3
	MOVE.b	(CharROMOffset)+, D3
	MOVEA.l	StringRAMOffset, StringROMOffset
	MOVEQ	#$0000000F, D4
;	BSR.w	*+$FFFFFCF0
	dc.l	$6100FCF0
	BRA.b	ScriptParser
	
CharNot4:
	CMPI.b	#5, CurrentChar
	BNE.b	CharNot5
	MOVE.b	(CharROMOffset)+, CurrentChar
	; adding 2 to all jumps...
	BSR.w	*+$6722
	BSR.w	*+$FFFFFA92

Unk3:
	TST.b	(StringRAMOffset)
	BEQ.b	*+$6
	ADDQ.l	#1, StringRAMOffset
	BRA.b	Unk3
	BRA.b	ScriptParser
	
CharNot5:
; added 2 to branches
	CMPI.b	#6, CurrentChar	; $06 is a variable for player names, item names, etc.
	BNE.b	CharNot6
	MOVEA.l	(A6)+, StringROMOffset
	BSR.w	*+$FFFFFA7C

Unk4:
	TST.b	(StringRAMOffset)
	BEQ.b	*+$6
	ADDQ.l	#1, StringRAMOffset
	BRA.b	Unk4
	BRA.b	ScriptParser

CharNot6:
	CMPI.b	#$0F, CurrentChar
	BCC.b	PutCharInRam
	
CharLT0F:
	CMPI.b	#$0D, CurrentChar
	BEQ.b	LineBreak
	CMPI.b	#$0C, CurrentChar

Scroll:
	BNE.b	Scroll

LineBreak:
	TST.w	D1
	BNE.b	PrepForPrint
	
PutCharInRam:
	MOVE.b	CurrentChar, (StringRAMOffset)+
	BRA.w	ScriptParser

PrepForPrint:
	CLR.b	(A1)
	MOVEA.l	A2, A0
	SUBQ.l	#1, A0
	MOVEM.l	(A7)+, D0/D1/D2/D3/D4/A1/A2
	RTS
	