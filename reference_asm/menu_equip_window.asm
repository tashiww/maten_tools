; ########################################################################################
; # Generated by the active disassembly feature of the Exodus emulation platform
; #
; # Creation Date:   2021-1-1 21:50:39
; # Analysis Region: 0x00008856 - 0x00008954
; ########################################################################################

 org $3778
draw_atk_def_value:

 org $87f6
draw_equipped_item:

 org $00008856

	MOVEQ	#$0000000A, D0	; x offset
	MOVEQ	#2, D1        	; y offset
	MOVEQ	#$0000001C, D2	; width 
	MOVEQ	#$0000000A, D3	; height
	MOVE.w	#$0043, D4	; palette info maybe?
	BSR.w	draw_background_window	; the currently equipped item window
	MOVE.w	D0, $4(A6)	
	MOVEQ	#$00000017, D0	; same as above, but for atk/def smaller window
	MOVEQ	#6, D1	
	MOVEQ	#$0000000F, D2	
	MOVEQ	#6, D3	
	MOVEQ	#3, D4	
	;BSR.w	*+$A776	
	BSR.w	$2fec	; draw smaller atk/def window
	MOVEQ	#$0000000A, D0
	MOVEQ	#$0000000C, D1
	MOVEQ	#$00000014, D2
	MOVEQ	#$0000000E, D3
	MOVE.w	#$0043, D4
	BSR.w	draw_background_window	; draw item window
	MOVE.w	D0, $6(A6)
	MOVE.w	A1, $4(A5)
	CLR.w	$6(A5)
	MOVEA.w	$4(A5), A1
	
	MOVEQ	#$0000000B, D0	; x offset for text
	MOVEQ	#4, D1	; y offset
	LEA	$87C8.w, A0	; this line will be automatically overwritten by my python script..
	BSR.w	write_string	; writes wpn/arm/hlm etc
	MOVEQ	#$00000018, D0	; reposition for "item" label
	MOVEQ	#4, D1
	LEA	*+$87DE, A0	; another automated python line...
	BSR.w	write_string
	MOVEQ	#$00000018, D0	; offsets for atk/def maybe?
	MOVEQ	#7, D1	
	LEA	*+$87E4, A0	
	BSR.w	$36f2	; different string writing subroutine
	MOVE.w	$2(A5), D2
	BSR.w	$a21c
	BSR.w	$a1f2	; familiar but not sure ...
	MOVEA.l	A0, A2
	MOVE.b	$14(A2), D2
	MOVEQ	#$0000000F, D0	; position for weapon
	MOVEQ	#4, D1	
	BSR.w	draw_equipped_item	; weap
	MOVE.b	$15(A2), D2	; loading equipped gear into d2
	MOVEQ	#$0000000F, D0	; could maybe delete this unless d0 gets messed up by the drawing sr
	MOVEQ	#6, D1
	BSR.w	draw_equipped_item	; armor
	MOVE.b	$16(A2), D2	
	MOVEQ	#$0000000F, D0	
	MOVEQ	#8, D1
	BSR.w	draw_equipped_item	; helmet
	MOVE.b	$17(A2), D2
	MOVEQ	#$0000000F, D0
	MOVEQ	#$0000000A, D1
	BSR.w	draw_equipped_item	; shield
	MOVE.b	$18(A2), D2	
	MOVEQ	#$0000001D, D0	; x offset for equipped item
	MOVEQ	#4, D1
	BSR.w	draw_equipped_item	; item
	CLR.l	D2
	MOVE.w	$A(A2), D2	; get atk stat into d2
	CMPI.w	#$03E8, D2	; compare to 1k
	BCS.b	loc_00008916
	MOVE.w	#$03E7, D2	; cap display at 999 - try to remove this
	
loc_00008916:
	MOVEQ	#3, D3	; digit padding?
	MOVEQ	#$0000001F, D0	; x offset
	MOVEQ	#7, D1	; y offset
	BSR.w	draw_atk_def_value	; draw atk/def number
	CLR.l	D2	
	MOVE.w	$C(A2), D2	; same as above but for defense
	CMPI.w	#$03E8, D2
	BCS.b	loc_00008930
	MOVE.w	#$03E7, D2	;
loc_00008930:
	MOVEQ	#3, D3
	MOVEQ	#$0000001F, D0
	MOVEQ	#9, D1
	BSR.w	draw_atk_def_value
	MOVE.w	$2(A5), D2
	BSR.w	$a21c	; mystery..
	MOVEQ	#$0000000B, D0	; maybe highlight parameters?
	MOVEQ	#$0000000E, D1	
	BSR.w	$a4b4	; draw items
	ADDQ.w	#1, D0
	MOVE.w	$6(A5), D7	
	BSR.w	$3328	; maybe branch to idle / highlighting
