; ########################################################################################
; # Generated by the active disassembly feature of the Exodus emulation platform
; #
; # Creation Date:   2020-12-1 20:31:28
; # Analysis Region: 0x00003558 - 0x000035E8
; ########################################################################################

current_char	equr	d0
converted_char	equr	d1
current_char_ram_offset	equr	a0	; location from which current char byte is pulled
ram_string_cursor	equr	a1	; current char offset in RAM string
menu_order	equr	a2	; all menu characters in order

 org $00003558

menu_font_parse:
	CLR.w	current_char
	MOVE.b	(current_char_ram_offset)+, current_char
	BNE.b	NotZero
	MOVE.b	#0, (ram_string_cursor)
	MOVEM.l	(A7)+, D0/D1/A0/A1/A2
	RTS
	
NotZero:
	CMPI.w	#$001A, current_char	; <$1A is 0-9
	BCS.b	Numeric
	CMPI.w	#$003F, current_char	; <$3F is alpha/symbols
	BCS.b	AlphaSymbols	
	BEQ.b	Blank	; $3F is a blank space
	CMPI.w	#$007B, current_char	; <$7B is hiragana
	BCS.b	Hiragana
	CMPI.w	#$007D, current_char	; $7D is enlongation line
	BEQ.b	Elongated
	CMPI.w	#$0080, current_char	; $7E is a down triangle, $7F is a small E, not printed in names
	BCS.b	Blank	; 
	CMPI.w	#$00B7, current_char	; <$B7 is katakana
	BCS.b	Katakana
	CMPI.w	#$00B8, current_char	; $B8 is another down triangle
	BEQ.b	DownTriangle
Blank:
	MOVEQ	#$0000000F, converted_char	; $0F is control code for a blank space
	BRA.b	MoveCharToRAM
	
; these are all offsets to convert between the 8x8 font table and 16x16 font table
AlphaSymbols:
	MOVE.w	current_char, converted_char
	ADDI.w	#$00BE, converted_char
	BRA.b	MoveCharToRAM
	
Elongated:
	MOVEQ	#$0000001F, converted_char
	BRA.b	MoveCharToRAM
	
Numeric:
	MOVE.w	current_char, converted_char
	BRA.b	MoveCharToRAM
	
; this would move $0183 to the RAM string, which would be interpreted as some kind of control code
DownTriangle:
	MOVE.b	#1, (ram_string_cursor)+
	MOVE.w	#$0083, converted_char
	BRA.b	MoveCharToRAM
	
Hiragana:
	SUBI.w	#$0040, current_char
	CLR.w	converted_char
	MOVE.b	(menu_order,current_char.w), converted_char
	BRA.b	DakutenCheck
	
Katakana:
	SUBI.w	#$0080, current_char
	CLR.w	converted_char
	MOVE.b	(menu_order,current_char.w), converted_char
	ADDI.w	#$0050, converted_char
DakutenCheck:
	MOVE.b	(current_char_ram_offset), current_char
	CMPI.b	#$7B, current_char
	BEQ.b	Dakuten
	CMPI.b	#$7C, current_char
	BNE.b	MoveCharToRAM
	ADDQ.w	#2, converted_char	
	BRA.b	IncCharCursor	
Dakuten:
	ADDQ.w	#1, converted_char
IncCharCursor:
	ADDQ.l	#1, current_char_ram_offset
MoveCharToRAM:
	MOVE.b	converted_char, (ram_string_cursor)+
	BRA.w	menu_font_parse
