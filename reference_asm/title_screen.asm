; ########################################################################################
; # Generated by the active disassembly feature of the Exodus emulation platform
; #
; # Creation Date:   2021-1-8 10:24:13
; # Analysis Region: 0x00001000 - 0x00004000
; ########################################################################################

 org $00001000

	dc.w	$8017, $8018, $8019, $801A, $801B, $801C, $801D, $801E, $801F, $8020, $8021, $8022, $8023, $8024, $8025, $8026, $8027, $8028, $8029, $802A, $802B, $802C, $802D, $802E, $802F ;0x0 (0x00001000-0x00001032, Entry count: 0x32)
loc_00001032:
	dc.b	$00, $00, $10, $4A ;0x0 (0x00001032-0x00001036, Entry count: 0x4) [Unknown data]
	dc.l	$0000103A
	dc.b	$42, $79, $00, $FF, $00, $1A, $08, $F9, $00, $00, $00, $FF, $00, $18, $4E, $75 ;0x0 (0x0000103A-0x0000104A, Entry count: 0x10) [Unknown data]
	TRAP	#5
	ORI.w	#$33FC, (A3,D0.w)	;Predicted (Code-scan)
	dc.b	$00, $FF, $00, $1A, $08, $F9, $00, $00, $00, $FF, $00, $18, $4E, $45, $00, $05, $42, $79, $00, $FF, $00, $1A, $08, $F9, $00, $00, $00, $FF, $00, $18, $4E, $45 ;0x0 (0x00001052-0x000010C6, Entry count: 0x74) [Unknown data]
	dc.b	$00, $73, $33, $FC, $02, $00, $00, $FF, $00, $1A, $08, $F9, $00, $00, $00, $FF, $00, $18, $4E, $45, $00, $02, $42, $79, $00, $FF, $00, $1A, $08, $F9, $00, $00 ;0x20
	dc.b	$00, $FF, $00, $18, $4E, $45, $00, $05, $33, $FC, $02, $00, $00, $FF, $00, $1A, $08, $F9, $00, $00, $00, $FF, $00, $18, $4E, $45, $00, $02, $42, $79, $00, $FF ;0x40
	dc.b	$00, $1A, $08, $F9, $00, $00, $00, $FF, $00, $18, $4E, $45, $00, $6F, $60, $8C, $00, $00, $10, $EC ;0x60
	dc.l	$000010CA
	dc.b	$61, $00, $0D, $94, $61, $00, $0D, $A8, $4E, $46, $00, $00, $10, $32, $4E, $46, $00, $00, $2B, $32, $4E, $46, $00, $00, $28, $6E, $4E, $46, $00, $00, $2D, $4A ;0x0 (0x000010CA-0x000010EC, Entry count: 0x22) [Unknown data]
	dc.b	$4E, $75 ;0x20
	BSR.w	loc_00001884
	MOVE.w	#$1000, D0
	CLR.w	D1
	MOVEA.w	#$C000, A1
	JSR	loc_00001C10
	MOVE.w	#$1000, D0
	CLR.w	D1
	MOVEA.w	#$E000, A1
	JSR	loc_00001C10
	JSR	loc_00001458
	dc.l	loc_00002B32
	JSR	loc_00001458
	dc.l	loc_0000286E
	JSR	loc_00001458
	dc.l	loc_00002D4A
	TRAP	#5
	ORI.b	#$7C, D1	;Predicted (Code-scan)
	ORI.b	#$20, D0	;Predicted (Code-scan)
	LEA	$00062C44, A6
	BSR.w	loc_00002384
	MOVEA.l	#$00002800, A5
	LEA	$00060E78, A6
	BSR.w	loc_00002384
	MOVEA.l	#$00006000, A5
	LEA	$000605EA, A6
	BSR.w	loc_00002384
	LEA	$0006413E, A0
	MOVEQ	#$00000010, D0
	CLR.w	D1
	BSR.w	loc_00001F58
	LEA	$0006284E, A0
	MOVEQ	#$00000010, D0
	MOVEQ	#$00000020, D1
	BSR.w	loc_00001F58
	LEA	$00060E58, A0
	MOVEQ	#$00000010, D0
	MOVEQ	#$00000060, D1
	BSR.w	loc_00001F58
	MOVEM.l	A0/D0, -(A7)
	MOVE.w	#$08C0, D0
	JSR	loc_00003B24
	MOVEA.l	A0, A5
	MOVEM.l	(A7)+, D0/A0
	MOVE.l	A5, -(A7)
	LEA	$0006415E, A6
	BSR.w	loc_00002384
	MOVEQ	#$00000027, D7
	MOVEQ	#$0000001B, D6
	MOVE.l	#$0000E000, D5
	MOVEA.l	A5, A6
	BSR.w	loc_00001CBA
	LEA	$0006286E, A6
	BSR.w	loc_00002384
	MOVEQ	#$00000027, D7
	MOVEQ	#$0000001B, D6
	MOVE.l	#$0000C000, D5
	MOVEA.l	A5, A6
	BSR.w	loc_00001CBA
	MOVEA.l	(A7)+, A5
	MOVE.l	A0, -(A7)
	MOVEA.l	A5, A0
	JSR	loc_00003B98
	MOVEA.l	(A7)+, A0
	LEA	loc_000013D4(PC), A0
	MOVEA.w	#$6000, A1
	MOVE.w	#$0108, D0
	MOVE.w	#$0168, D1
	MOVEQ	#3, D2
	BSR.w	loc_00002768
	MOVE.w	A0, $00FF07B4
	JSR	loc_00001416
	dc.l	loc_00001032
	MOVEQ	#1, D0
	MOVEQ	#$0000000F, D1
	MOVEQ	#1, D2
	BSR.w	loc_00002C7E
	LEA	$00064796, A0
	CLR.w	D0
	BSR.w	loc_00002DC8
	CLR.l	$00FF039C
	CLR.l	$00FF075C
	BSET.b	#2, $00FF0018
	BSET.b	#3, $00FF0018
	TRAP	#5
	ORI.b	#0, D1	;Predicted (Code-scan)
	ADDI.b	#$FC, -(A6)	;Predicted (Code-scan)
	MOVE.b	(A4)+, (A4)	;Predicted (Code-scan)
	dc.b	$00, $FF, $07, $B2 ;0x0 (0x00001248-0x0000124C, Entry count: 0x4) [Unknown data]
	MOVEQ	#1, D0
	BSR.w	loc_00002350
	MOVEQ	#$00000014, D2
loc_00001254:
	TRAP	#5
	ORI.b	#$39, D1	;Predicted (Code-scan)
	ORI.b	#$FF, D7	;Predicted (Code-scan)
	dc.b	$27, $DA ;0x0 (0x0000125E-0x00001260, Entry count: 0x2) [Unknown data]
	BNE.b	loc_0000129A
	SUBQ.w	#1, $00FF07B2
	DBF	D2, loc_00001254
	MOVE.w	#$00A8, D2
loc_00001270:
	TRAP	#5
	ORI.b	#$39, D1	;Predicted (Code-scan)
	ORI.b	#$FF, D7	;Predicted (Code-scan)
	dc.b	$27, $DA ;0x0 (0x0000127A-0x0000127C, Entry count: 0x2) [Unknown data]
	BNE.b	loc_0000129A
	MOVEA.w	$00FF07B4, A0
	MOVE.w	#$0108, D0
	MOVE.w	#$00C0, D1
	BSR.w	loc_00002A1C
	SUBQ.w	#1, $00FF07B2
	TST.w	D2
	BNE.b	loc_00001270
loc_0000129A:
	MOVEA.w	$00FF07B4, A0	;Predicted (Code-scan)
	MOVE.w	#$0108, D0	;Predicted (Code-scan)
	MOVE.w	#$00C0, D1	;Predicted (Code-scan)
	BSR.w	loc_000027F8	;Predicted (Code-scan)
	LEA	loc_000013DC(PC), A0	;Predicted (Code-scan)
	MOVEA.w	#$6000, A1	;Predicted (Code-scan)
	MOVE.w	#$0120, D0	;Predicted (Code-scan)
	MOVE.w	#$0118, D1	;Predicted (Code-scan)
	MOVEQ	#7, D2	;Predicted (Code-scan)
	BSR.w	loc_00002768	;Predicted (Code-scan)
	LEA	loc_000013E4(PC), A0	;Predicted (Code-scan)
	MOVEA.w	#$6000, A1	;Predicted (Code-scan)
	MOVE.w	#$011C, D0	;Predicted (Code-scan)
	MOVE.w	#$0138, D1	;Predicted (Code-scan)
	MOVEQ	#7, D2	;Predicted (Code-scan)
	BSR.w	loc_00002768	;Predicted (Code-scan)
	TRAP	#5	;Predicted (Code-scan)
	ORI.b	#$39, D1	;Predicted (Code-scan)
	ORI.b	#$FF, D7	;Predicted (Code-scan)
	dc.b	$27, $DA, $66, $32, $53, $79, $00, $FF, $07, $B2, $66, $EA, $30, $3C, $00, $FD, $61, $00, $10, $5C, $30, $3C, $01, $68, $4E, $45, $00, $01, $08, $39, $00, $07 ;0x0 (0x000012E2-0x0000132E, Entry count: 0x4C) [Unknown data]
	dc.b	$00, $FF, $27, $DA, $66, $10, $51, $C8, $FF, $F0, $42, $79, $00, $FF, $00, $00, $4E, $F9, $00, $00, $15, $6A, $30, $3C, $00, $FE, $61, $00, $10, $32, $33, $FC ;0x20
	dc.b	$00, $02, $00, $FF, $00, $00, $4E, $F9, $00, $00, $15, $6A ;0x40
loc_0000132E:
	dc.w	$000C
	dc.b	$00, $20, $0E, $00, $00, $64, $00, $20, $00, $20, $0E, $00, $00, $58, $00, $00, $00, $20, $0E, $00, $00, $4C, $FF, $E0, $00, $20, $0E, $00, $00, $40, $FF, $C0 ;0x0 (0x00001330-0x000013D4, Entry count: 0xA4) [Unknown data]
	dc.b	$00, $00, $0F, $00, $00, $30, $00, $20, $00, $00, $0F, $00, $00, $20, $00, $00, $00, $00, $0F, $00, $00, $10, $FF, $E0, $00, $00, $0F, $00, $00, $00, $FF, $C0 ;0x20
	dc.b	$00, $20, $06, $00, $00, $94, $00, $60, $00, $20, $0E, $00, $00, $88, $00, $40, $00, $00, $07, $00, $00, $80, $00, $60, $00, $00, $0F, $00, $00, $70, $00, $40 ;0x40
	dc.b	$00, $04, $00, $00, $08, $00, $00, $A6, $00, $20, $00, $00, $0C, $00, $00, $A2, $00, $00, $00, $00, $0C, $00, $00, $9E, $FF, $E0, $00, $00, $0C, $00, $00, $9A ;0x60
	dc.b	$FF, $C0, $00, $04, $00, $00, $0D, $00, $00, $C1, $00, $20, $00, $00, $0D, $00, $00, $B9, $00, $00, $00, $00, $0D, $00, $00, $B1, $FF, $E0, $00, $00, $0D, $00 ;0x80
	dc.b	$00, $A9, $FF, $C0 ;0xA0
loc_000013D4:
	dc.w	$000F
	dc.l	loc_0000132E
	dc.b	$FF, $FF ;0x0 (0x000013DA-0x000013DC, Entry count: 0x2) [Unknown data]
loc_000013DC:
	dc.b	$00, $0F, $00, $00, $13, $90, $FF, $FF ;0x0 (0x000013DC-0x000013E4, Entry count: 0x8) [Unknown data]
loc_000013E4:
	dc.b	$00, $0F, $00, $00, $13, $B2, $FF, $FF, $00, $20, $0E, $00 ;0x0 (0x000013E4-0x000013F0, Entry count: 0xC) [Unknown data]
loc_000013F0:
	LEA	$00FF07D6, A0
	MOVEQ	#$0000000F, D0
loc_000013F8:
	CLR.l	(A0)+
	CLR.l	(A0)
	ADDA.l	#$000001FC, A0
	DBF	D0, loc_000013F8
	LEA	$00FF07C6, A0
	MOVEQ	#7, D0
loc_0000140E:
	CLR.w	(A0)+
	DBF	D0, loc_0000140E
	RTS
loc_00001416:
	MOVE.l	A5, $00FF07C2
	MOVE.l	A6, $00FF07BE
	MOVEA.l	(A7)+, A6
	MOVEA.l	(A6)+, A5
	MOVE.l	A6, -(A7)
	MOVE.l	D0, -(A7)
	MOVE.w	#0, -(A7)
	MOVEQ	#$0000000F, D0
	LEA	$00FF07D6, A6
loc_00001436:
	TST.l	(A6)
	BEQ.w	loc_0000149A
	ADDA.l	#$00000200, A6
	DBF	D0, loc_00001436
	MOVE.w	(A7)+, D0	;Predicted (Code-scan)
	MOVE.l	(A7)+, D0	;Predicted (Code-scan)
	MOVEA.l	$00FF07C2, A5	;Predicted (Code-scan)
	MOVEA.l	$00FF07BE, A6	;Predicted (Code-scan)
	RTS	;Predicted (Code-scan)
loc_00001458:
	MOVE.l	A5, $00FF07C2
	MOVE.l	A6, $00FF07BE
	MOVEA.l	(A7)+, A6
	MOVEA.l	(A6)+, A5
	MOVE.l	A6, -(A7)
	MOVE.l	D0, -(A7)
	MOVE.w	#1, -(A7)
	MOVEQ	#$0000000F, D0
	LEA	$00FF25D6, A6
loc_00001478:
	TST.l	(A6)
	BEQ.w	loc_0000149A
	SUBA.l	#$00000200, A6
	DBF	D0, loc_00001478
	MOVE.w	(A7)+, D0	;Predicted (Code-scan)
	MOVE.l	(A7)+, D0	;Predicted (Code-scan)
	MOVEA.l	$00FF07C2, A5	;Predicted (Code-scan)
	MOVEA.l	$00FF07BE, A6	;Predicted (Code-scan)
	RTS	;Predicted (Code-scan)
loc_0000149A:
	MOVE.w	(A7)+, $A(A6)
	MOVE.l	(A7)+, D0
	MOVE.l	(A5)+, (A6)
	MOVE.l	(A5), $4(A6)
	MOVEA.l	$00FF07C2, A5
	MOVE.l	D0, $00FF07C2
	MOVE	SR, D0
	ANDI.w	#$0F00, D0
	MOVE.w	D0, $50(A6)
	MOVE.l	$00FF07C2, D0
	MOVE.w	#1, $8(A6)
	MOVE.l	(A7), $10(A6)
	SUBI.l	#$0000000A, $10(A6)
	MOVE.l	A6, $C(A6)
	ADDI.l	#$00000200, $C(A6)
	MOVE.w	#$0500, $50(A6)
	ADDA.l	#$00000050, A6
	MOVEM.l	A5/A4/A3/A2/A1/A0/D7/D6/D5/D4/D3/D2/D1/D0, -(A6)
	MOVE.l	$00FF07BE, -(A6)
	MOVEA.l	$00FF07BE, A6
	RTS
	CLR.w	$00FF07BC
	CLR.w	$00FF07B6
	LEA	$00FF07D6, A6
	MOVE.l	A6, $00FF07B8
loc_00001516:
	MOVEA.l	$00FF07B8, A6
	TST.l	(A6)
	BEQ.w	loc_000015CC
	MOVE.w	$00FF07C6, D0
	BEQ.w	loc_0000153E
	TST.w	$A(A6)	;Predicted (Code-scan)
	BNE.w	loc_0000153E	;Predicted (Code-scan)
	CMP.w	$00FF07B6, D0	;Predicted (Code-scan)
	BNE.w	loc_000015CC	;Predicted (Code-scan)
loc_0000153E:
	SUBQ.w	#1, $8(A6)
	BNE.w	loc_000015CC
	MOVEA.l	$C(A6), A5
	MOVE.l	A5, USP
	MOVE.l	(A6), -(A7)
	MOVE.w	$50(A6), -(A7)
	ADDA.l	#$00000014, A6
	MOVE.l	(A6)+, $00FF07BE
	MOVEM.l	(A6)+, D0/D1/D2/D3/D4/D5/D6/D7/A0/A1/A2/A3/A4/A5
	MOVEA.l	$00FF07BE, A6
	RTE
	PEA	loc_00001586(PC)
	MOVE.l	A6, $00FF07BE
	MOVEA.l	$00FF07B8, A6
	MOVE.l	$4(A6), -(A7)
	MOVEA.l	$00FF07BE, A6
	RTS
loc_00001586:
	TRAP	#4
	MOVEA.l	$00FF07B8, A6
	CLR.l	(A6)
	CLR.l	$4(A6)
	BRA.w	loc_000015CC
	MOVE.l	A6, $00FF07BE
	MOVEA.l	$00FF07B8, A6
	ADDA.l	#$00000050, A6
	MOVEM.l	A5/A4/A3/A2/A1/A0/D7/D6/D5/D4/D3/D2/D1/D0, -(A6)
	MOVE.l	$00FF07BE, -(A6)
	MOVEA.l	$00FF07B8, A6
	MOVE.l	USP, A5
	MOVE.l	A5, $C(A6)
	MOVE.w	(A7)+, $50(A6)
	MOVEA.l	(A7)+, A5
	MOVE.w	(A5)+, $8(A6)
	MOVE.l	A5, (A6)
loc_000015CC:
	MOVE.w	$00FF0018, $52(A6)
	ADDA.l	#$00000200, A6
	MOVE.l	A6, $00FF07B8
	MOVE.w	$00FF07B6, D0
	ADDQ.w	#1, D0
	MOVE.w	D0, $00FF07B6
	CMPI.w	#$0010, D0
	BCS.w	loc_00001516
	RTS
	dc.b	$23, $CE, $00, $FF, $07, $BE, $2C, $79, $00, $FF, $07, $B8, $DD, $FC, $00, $00, $00, $50, $48, $E6, $FF, $FC, $2D, $39, $00, $FF, $07, $BE, $2C, $79, $00, $FF ;0x0 (0x000015F8-0x00001704, Entry count: 0x10C) [Unknown data]
	dc.b	$07, $B8, $4E, $6D, $2D, $4D, $00, $0C, $3D, $5F, $00, $50, $2A, $5F, $28, $5D, $2C, $8D, $4D, $F9, $00, $FF, $07, $D6, $2A, $6C, $00, $04, $42, $40, $BB, $EE ;0x20
	dc.b	$00, $04, $67, $00, $00, $14, $DD, $FC, $00, $00, $02, $00, $52, $40, $0C, $40, $00, $10, $65, $EA, $60, $00, $00, $4A, $2F, $39, $00, $FF, $07, $B8, $3F, $39 ;0x40
	dc.b	$00, $FF, $07, $B6, $23, $CE, $00, $FF, $07, $B8, $33, $C0, $00, $FF, $07, $B6, $2A, $6E, $00, $0C, $49, $FA, $00, $10, $2B, $0C, $4E, $65, $2F, $2E, $00, $04 ;0x60
	dc.b	$3F, $2E, $00, $50, $4E, $73, $4E, $44, $2C, $79, $00, $FF, $07, $B8, $42, $96, $42, $AE, $00, $04, $33, $DF, $00, $FF, $07, $B6, $23, $DF, $00, $FF, $07, $B8 ;0x80
	dc.b	$2C, $79, $00, $FF, $07, $B8, $2A, $6E, $00, $0C, $4E, $65, $2F, $16, $3F, $2E, $00, $50, $DD, $FC, $00, $00, $00, $14, $23, $DE, $00, $FF, $07, $BE, $4C, $DE ;0xA0
	dc.b	$3F, $FF, $2C, $79, $00, $FF, $07, $BE, $4E, $73, $48, $E7, $80, $80, $41, $F9, $00, $FF, $07, $D2, $70, $06, $31, $50, $00, $02, $55, $48, $51, $C8, $FF, $F8 ;0xC0
	dc.b	$31, $79, $00, $FF, $07, $B6, $00, $02, $4C, $DF, $01, $01, $4E, $75, $48, $E7, $80, $80, $41, $F9, $00, $FF, $07, $C6, $70, $06, $30, $A8, $00, $02, $54, $48 ;0xE0
	dc.b	$51, $C8, $FF, $F8, $42, $50, $4C, $DF, $01, $01, $4E, $75 ;0x100
	MOVE.w	#$0100, $00A11100
loc_0000170C:
	BTST.b	#0, $00A11100
	BNE.b	loc_0000170C
	BSR.w	loc_00001798
	BSR.b	loc_00001726
	MOVE.w	#0, $00A11100
	RTS
loc_00001726:
	LEA	$00FF27D8, A5
	LEA	$00A10003, A6
	BSR.b	loc_00001738
	ADDQ.w	#2, A6
	ADDQ.w	#1, A5
loc_00001738:
	CLR.w	D7
	CMPI.b	#$0D, -$2(A5)
	BNE.b	loc_00001760
	MOVE.b	#0, (A6)
	NOP
	NOP
	MOVE.b	(A6), D7
	ASL.b	#2, D7
	MOVE.b	#$40, (A6)
	ANDI.w	#$00C0, D7
	MOVE.b	(A6), D6
	ANDI.w	#$003F, D6
	OR.b	D6, D7
	NOT.b	D7
loc_00001760:
	MOVE.l	A5, -(A7)
	MOVE.b	(A5), D1
	EOR.b	D7, D1
	AND.b	D7, D1
	MOVE.b	D1, $2(A5)
	CMP.b	(A5), D7
	BNE.b	loc_0000177C
	SUBQ.b	#1, $6(A5)
	BEQ.b	loc_00001788
	CLR.b	$4(A5)
	BRA.b	loc_00001792
loc_0000177C:
	MOVE.b	D1, $4(A5)	;Predicted (Code-scan)
	MOVE.b	#$1E, $6(A5)	;Predicted (Code-scan)
	BRA.b	loc_00001792	;Predicted (Code-scan)
loc_00001788:
	MOVE.b	D7, $4(A5)
	MOVE.b	#$0A, $6(A5)
loc_00001792:
	MOVE.b	D7, (A5)
	MOVEA.l	(A7)+, A5
	RTS
loc_00001798:
	LEA	$00FF27D6, A0
	CLR.w	D1
	BSR.b	loc_000017A4
	ADDQ.w	#1, D1
loc_000017A4:
	MOVEM.l	A0/D3/D2/D1, -(A7)
	LEA	$00A10003, A0
	MOVEQ	#0, D0
	MOVE.b	D1, D0
	ADD.l	D0, D0
	ADDA.l	D0, A0
	MOVEQ	#0, D0
	MOVE.l	D0, D1
	MOVE.b	$6(A0), D3
	SWAP	D3
	MOVE.b	(A0), D3
	MOVE.b	#$40, $6(A0)
	MOVE.b	#$40, (A0)
	NOP
	MOVE.b	(A0), D0
	MOVE.b	#0, (A0)
	NOP
	MOVE.b	(A0), D1
	MOVE.b	#$40, (A0)
	MOVE.w	D0, D2
	LSR.b	#1, D0
	ROR.w	#1, D0
	LSR.b	#1, D0
	ROL.w	#1, D0
	ROR.w	#1, D2
	LSR.b	#1, D2
	ROL.w	#1, D2
	OR.b	D2, D0
	ANDI.w	#3, D0
	LSL.b	#2, D0
	MOVE.w	D1, D2
	LSR.b	#1, D1
	ROR.w	#1, D1
	LSR.b	#1, D1
	ROL.w	#1, D1
	ROR.w	#1, D2
	LSR.b	#1, D2
	ROL.w	#1, D2
	OR.b	D2, D1
	ANDI.w	#3, D1
	OR.b	D1, D0
	MOVE.b	(A0), D3
	SWAP	D3
	MOVE.b	$6(A0), D3
	MOVEM.l	(A7)+, D1/D2/D3/A0
	MOVE.b	D0, (A0,D1.w)
	RTS
loc_0000181E:
	MOVE.l	D0, -(A7)
loc_00001820:
	MOVE.w	$00C00004, D0
	BTST.l	#1, D0
	BNE.b	loc_00001820
	MOVE.l	(A7)+, D0
	RTS
loc_00001830:
	MOVE.l	D0, -(A7)
	MOVE.w	$00FF27E2, D0
	BSET.l	#4, D0
	MOVE.w	D0, $00FF27E2
	MOVE.w	D0, $00C00004
	MOVE.l	(A7)+, D0
	RTS
loc_0000184C:
	MOVE.l	D0, -(A7)
	MOVE.w	$00FF27E2, D0
	BCLR.l	#4, D0
	MOVE.w	D0, $00FF27E2
	MOVE.w	D0, $00C00004
	MOVE.l	(A7)+, D0
	RTS
loc_00001868:
	MOVE.l	D0, -(A7)
	MOVE.w	$00FF27E2, D0
	BSET.l	#6, D0
	MOVE.w	D0, $00FF27E2
	MOVE.w	D0, $00C00004
	MOVE.l	(A7)+, D0
	RTS
loc_00001884:
	MOVE.l	D0, -(A7)
	MOVE.w	$00FF27E2, D0
	BCLR.l	#6, D0
	MOVE.w	D0, $00FF27E2
	MOVE.w	D0, $00C00004
	MOVE.l	(A7)+, D0
	RTS
	MOVE.l	D0, -(A7)
	MOVE.w	$00FF27E2, D0
	BSET.l	#5, D0
	MOVE.w	D0, $00FF27E2
	MOVE.w	D0, $00C00004
	MOVE.l	(A7)+, D0
	RTS
	MOVE.l	D0, -(A7)
	MOVE.w	$00FF27E2, D0
	BCLR.l	#5, D0
	MOVE.w	D0, $00FF27E2
	MOVE.w	D0, $00C00004
	MOVE.l	(A7)+, D0
	RTS
	BSR.w	loc_0000181E
	LEA	$00C00004, A6
	LEA	$00FF27E0, A5
	LEA	loc_00001966(PC), A0
	MOVE.w	(A6), D0
	MOVEQ	#$00000017, D0
	MOVE.w	#$8000, D1
loc_000018F4:
	MOVE.b	(A0)+, D1
	MOVE.w	D1, (A5)+
	MOVE.w	D1, (A6)
	ADDI.w	#$0100, D1
	DBF	D0, loc_000018F4
	MOVE.l	#$40000080, $00C00004
	MOVE.w	#0, $00C00000
	BSR.w	loc_0000181E
	BSR.w	loc_0000184C
	MOVE.l	#$C0000000, $00C00004
	LEA	$00FF001A, A0
	MOVEQ	#$0000003F, D0
loc_0000192E:
	MOVE.w	#0, $00C00000
	CLR.w	(A0)+
	DBF	D0, loc_0000192E
	MOVE.l	#$40000010, $00C00004
	MOVEQ	#$00000027, D0
loc_00001948:
	MOVE.w	#0, $00C00000
	DBF	D0, loc_00001948
	MOVEA.l	#$00FF039C, A0
	MOVE.w	#$01E0, D0
loc_0000195E:
	CLR.w	(A0)+
	DBF	D0, loc_0000195E
	RTS
loc_00001966:
	dc.b	$04, $14, $30, $34, $07, $5C, $00, $00, $00, $00, $FF, $00, $81, $2F, $00, $01, $01, $00, $00, $FF, $FF, $00, $00, $80 ;0x0 (0x00001966-0x0000197E, Entry count: 0x18) [Unknown data]
	MOVE.w	#$0100, $00A11200
	MOVE.w	#$001E, $00FF27DE
	CLR.w	$00FF0018
	CLR.w	$00FF011A
	JSR	loc_000013F0
	JSR	loc_0000262C
	JSR	loc_00003B0A
	BSET.b	#1, $00FF0018
	BSR.w	loc_000037F6
	RTS
	dc.b	$3F, $00, $30, $39, $00, $FF, $00, $16, $B0, $79, $00, $FF, $00, $16, $67, $F8, $30, $1F, $4E, $75 ;0x0 (0x000019BA-0x000019CE, Entry count: 0x14) [Unknown data]
loc_000019CE:
	TRAP	#2	;Predicted (Code-scan)
	MOVEM.l	A1/A0/D1/D0, -(A7)	;Predicted (Code-scan)
	MOVE.w	#$8F02, $00C00004	;Predicted (Code-scan)
	MOVE.w	A1, D1	;Predicted (Code-scan)
	ANDI.w	#$3FFF, D1	;Predicted (Code-scan)
	ORI.w	#$4000, D1	;Predicted (Code-scan)
	MOVE.w	D1, $00C00004	;Predicted (Code-scan)
	MOVE.w	A1, D1	;Predicted (Code-scan)
	LSR.w	#8, D1	;Predicted (Code-scan)
	LSR.w	#6, D1	;Predicted (Code-scan)
	MOVE.w	D1, $00C00004	;Predicted (Code-scan)
	LEA	$00C00000, A1	;Predicted (Code-scan)
	SUBQ.l	#1, D0	;Predicted (Code-scan)
loc_00001A00:
	MOVE.w	(A0)+, (A1)	;Predicted (Code-scan)
	DBF	D0, loc_00001A00	;Predicted (Code-scan)
	MOVEM.l	(A7)+, D0/D1/A0/A1	;Predicted (Code-scan)
	TRAP	#3	;Predicted (Code-scan)
	RTS	;Predicted (Code-scan)
loc_00001A0E:
	MOVE.w	#$0100, $00A11100
loc_00001A16:
	BTST.b	#0, $00A11100
	BNE.b	loc_00001A16
	BSR.w	loc_00001830
	MOVE.w	(A3)+, (A2)
	MOVE.w	(A3)+, (A2)
	MOVE.w	(A3)+, (A2)
	MOVE.w	(A3)+, (A2)
	MOVE.w	(A3)+, (A2)
	MOVE.w	(A3)+, (A2)
	MOVE.w	(A3)+, (A2)
	MOVE.w	(A3)+, (A2)
	MOVE.w	#0, $00A11100
	BSR.w	loc_0000181E
	RTS
	MOVEM.l	A2/A1/A0/D3/D2/D1/D0, -(A7)
	CLR.l	D2
	MOVE.w	D0, D2
	LSL.l	#1, D2
	MOVE.l	A0, D3
	ADD.l	D3, D2
	EOR.l	D3, D2
	BTST.l	#$11, D2
	BEQ.b	loc_00001A60
	BSR.w	loc_000019CE	;Predicted (Code-scan)
	BRA.w	loc_00001AF4	;Predicted (Code-scan)
loc_00001A60:
	LINK.w	A3, #-$00000010
	TRAP	#2
	MOVE.w	A1, D1
	LSR.w	#8, D1
	LSR.w	#6, D1
	ORI.w	#$0080, D1
	MOVE.w	D1, -(A3)
	MOVE.w	A1, D1
	ANDI.w	#$3FFF, D1
	ORI.w	#$4000, D1
	MOVE.w	D1, -(A3)
	MOVE.l	A0, D1
	SWAP	D1
	LSR.w	#1, D1
	ANDI.w	#$007F, D1
	ORI.w	#$9700, D1
	MOVE.w	D1, -(A3)
	MOVE.l	A0, D1
	LSR.l	#1, D1
	LSR.w	#8, D1
	ANDI.w	#$00FF, D1
	ORI.w	#$9600, D1
	MOVE.w	D1, -(A3)
	MOVE.w	A0, D1
	LSR.w	#1, D1
	ANDI.w	#$00FF, D1
	ORI.w	#$9500, D1
	MOVE.w	D1, -(A3)
	MOVE.w	D0, D1
	LSR.w	#8, D1
	ANDI.w	#$00FF, D1
	ORI.w	#$9400, D1
	MOVE.w	D1, -(A3)
	ANDI.w	#$00FF, D0
	ORI.w	#$9300, D0
	MOVE.w	D0, -(A3)
	MOVE.w	#$8F02, -(A3)
	LEA	$00C00004, A2
	BSR.w	loc_00001A0E
	MOVE.w	A1, D1
	ANDI.w	#$3FFF, D1
	ORI.w	#$4000, D1
	MOVE.w	D1, (A2)
	MOVE.w	A1, D1
	LSR.w	#8, D1
	LSR.w	#6, D1
	MOVE.w	D1, (A2)
	MOVE.w	(A0), $00C00000
	BSR.w	loc_0000184C
	TRAP	#3
	UNLK	A3
loc_00001AF4:
	MOVEM.l	(A7)+, D0/D1/D2/D3/A0/A1/A2
	RTS
	MOVEM.l	A2/A1/A0/D1/D0, -(A7)
	LINK.w	A3, #-$00000010
	TRAP	#2
	MOVE.w	#$0080, -(A3)
	MOVE.w	A1, D1
	ANDI.w	#$007F, D1
	ORI.w	#$C000, D1
	MOVE.w	D1, -(A3)
	MOVE.l	A0, D1
	SWAP	D1
	LSR.w	#1, D1
	ANDI.w	#$007F, D1
	ORI.w	#$9700, D1
	MOVE.w	D1, -(A3)
	MOVE.l	A0, D1
	LSR.l	#1, D1
	LSR.w	#8, D1
	ANDI.w	#$00FF, D1
	ORI.w	#$9600, D1
	MOVE.w	D1, -(A3)
	MOVE.w	A0, D1
	LSR.w	#1, D1
	ANDI.w	#$00FF, D1
	ORI.w	#$9500, D1
	MOVE.w	D1, -(A3)
	MOVE.w	D0, D1
	LSR.w	#8, D1
	ANDI.w	#$00FF, D1
	ORI.w	#$9400, D1
	MOVE.w	D1, -(A3)
	ANDI.w	#$00FF, D0
	ORI.w	#$9300, D0
	MOVE.w	D0, -(A3)
	MOVE.w	#$8F02, -(A3)
	LEA	$00C00004, A2
	BSR.w	loc_00001A0E
	CMPA.l	#$00F00000, A0
	BCS.w	loc_00001B88
	MOVE.w	A1, D1
	ANDI.w	#$007F, D1
	ORI.w	#$C000, D1
	MOVE.w	D1, (A2)
	MOVE.w	#0, (A2)
	MOVE.w	(A0), $00C00000
loc_00001B88:
	BSR.w	loc_0000184C
	TRAP	#3
	UNLK	A3
	MOVEM.l	(A7)+, D0/D1/A0/A1/A2
	RTS
	MOVEM.l	A2/A1/A0/D0, -(A7)
	LINK.w	A3, #-$00000010
	TRAP	#2
	MOVE.w	#$0090, -(A3)
	MOVE.w	#$4000, -(A3)
	MOVE.l	A0, D0
	SWAP	D0
	LSR.w	#1, D0
	ANDI.w	#$007F, D0
	ORI.w	#$9700, D0
	MOVE.w	D0, -(A3)
	MOVE.l	A0, D0
	LSR.l	#1, D0
	LSR.w	#8, D0
	ANDI.w	#$00FF, D0
	ORI.w	#$9600, D0
	MOVE.w	D0, -(A3)
	MOVE.w	A0, D0
	LSR.w	#1, D0
	ANDI.w	#$00FF, D0
	ORI.w	#$9500, D0
	MOVE.w	D0, -(A3)
	MOVE.w	#$9400, -(A3)
	MOVE.w	#$9328, -(A3)
	MOVE.w	#$8F02, -(A3)
	MOVEA.l	#$00C00004, A2
	BSR.w	loc_00001A0E
	CMPA.l	#$00F00000, A0
	BCS.b	loc_00001C02
	MOVE.w	#$4000, (A2)
	MOVE.w	#$0010, (A2)
	MOVE.w	(A0), $00C00000
loc_00001C02:
	BSR.w	loc_0000184C
	TRAP	#3
	UNLK	A3
	MOVEM.l	(A7)+, D0/A0/A1/A2
	RTS
loc_00001C10:
	MOVEM.l	A2/A1/A0/D1/D0, -(A7)
	LINK.w	A3, #-$00000010
	TRAP	#2
	MOVE.w	D1, -(A3)
	MOVE.w	A1, D1
	LSR.w	#8, D1
	LSR.w	#6, D1
	ORI.w	#$0080, D1
	MOVE.w	D1, -(A3)
	MOVE.w	A1, D1
	ANDI.w	#$3FFF, D1
	ORI.w	#$4000, D1
	MOVE.w	D1, -(A3)
	MOVE.w	#$9780, -(A3)
	MOVE.w	D0, D1
	LSR.w	#8, D1
	ANDI.w	#$00FF, D1
	ORI.w	#$9400, D1
	MOVE.w	D1, -(A3)
	ANDI.w	#$00FF, D0
	ORI.w	#$9300, D0
	MOVE.w	D0, -(A3)
	MOVE.w	#$8F01, -(A3)
	LEA	$00C00004, A2
	MOVE.w	#$0100, $00A11100
loc_00001C62:
	BTST.b	#0, $00A11100
	BNE.b	loc_00001C62
	BSR.w	loc_00001830
	MOVE.w	(A3)+, (A2)
	MOVE.w	(A3)+, (A2)
	MOVE.w	(A3)+, (A2)
	MOVE.w	(A3)+, (A2)
	MOVE.w	(A3)+, (A2)
	MOVE.w	(A3)+, (A2)
	MOVE.w	(A3)+, $00C00000
	MOVE.w	#0, $00A11100
	BSR.w	loc_0000181E
	BSR.w	loc_0000184C
	MOVE.w	#$8F02, $00C00004
	TRAP	#3
	UNLK	A3
	MOVEM.l	(A7)+, D0/D1/A0/A1/A2
	RTS
	MOVEQ	#$00000040, D7
	MOVE.b	D7, $00A10009
	MOVE.b	D7, $00A1000B
	MOVE.b	D7, $00A1000D
	RTS
loc_00001CBA:
	TRAP	#2
	MOVEM.l	A5/D3/D2, -(A7)
	CLR.l	D3
	MOVE.w	D5, D3
	BSET.l	#$0E, D3
	BCLR.l	#$0F, D3
	LSL.l	#2, D5
	ANDI.l	#$00030000, D5
	MOVE.w	D3, D5
	SWAP	D5
	LEA	$00C00000, A5
	MOVE.l	#$00800000, D3
loc_00001CE4:
	MOVE.l	D5, $4(A5)
	MOVE.w	D7, D2
loc_00001CEA:
	MOVE.w	(A6)+, (A5)
	DBF	D2, loc_00001CEA
	ADD.l	D3, D5
	DBF	D6, loc_00001CE4
	MOVEM.l	(A7)+, D2/D3/A5
	TRAP	#3
	RTS
	dc.b	$48, $E7, $37, $04, $42, $85, $3A, $00, $3C, $01, $E3, $4D, $EF, $4E, $DA, $46, $06, $45, $C0, $00, $3E, $02, $53, $47, $3C, $03, $53, $46, $4E, $42, $42, $83 ;0x0 (0x00001CFE-0x00001E60, Entry count: 0x162) [Unknown data]
	dc.b	$36, $05, $08, $C3, $00, $0E, $08, $83, $00, $0F, $E5, $8D, $02, $85, $00, $03, $00, $00, $3A, $03, $48, $45, $4B, $F9, $00, $C0, $00, $00, $26, $3C, $00, $80 ;0x20
	dc.b	$00, $00, $2B, $45, $00, $04, $34, $07, $3A, $84, $51, $CA, $FF, $FC, $DA, $83, $51, $CE, $FF, $F0, $4E, $43, $4C, $DF, $20, $EC, $4E, $75, $4E, $42, $48, $E7 ;0x40
	dc.b	$E0, $00, $33, $FC, $8F, $02, $00, $C0, $00, $04, $34, $00, $E0, $4A, $EC, $4A, $02, $42, $00, $03, $02, $40, $3F, $FF, $33, $C0, $00, $C0, $00, $04, $33, $C2 ;0x60
	dc.b	$00, $C0, $00, $04, $53, $41, $30, $F9, $00, $C0, $00, $00, $51, $C9, $FF, $F8, $4C, $DF, $00, $07, $4E, $43, $4E, $75, $4E, $42, $48, $E7, $A0, $00, $34, $00 ;0x80
	dc.b	$02, $42, $3F, $FF, $00, $42, $40, $00, $33, $C2, $00, $C0, $00, $04, $E0, $48, $EC, $48, $33, $C0, $00, $C0, $00, $04, $33, $C1, $00, $C0, $00, $00, $4C, $DF ;0xA0
	dc.b	$00, $05, $4E, $43, $4E, $75, $4E, $42, $2F, $00, $32, $00, $E0, $49, $EC, $49, $02, $41, $00, $03, $02, $40, $3F, $FF, $33, $C0, $00, $C0, $00, $04, $33, $C1 ;0xC0
	dc.b	$00, $C0, $00, $04, $32, $39, $00, $C0, $00, $00, $20, $1F, $4E, $43, $4E, $75, $48, $E7, $C0, $00, $E3, $48, $EF, $49, $D0, $41, $D0, $48, $32, $02, $61, $98 ;0xE0
	dc.b	$4C, $DF, $00, $03, $4E, $75, $48, $E7, $C0, $00, $E3, $48, $EF, $49, $D0, $41, $D0, $48, $61, $B2, $34, $01, $4C, $DF, $00, $03, $4E, $75, $48, $E7, $FC, $00 ;0x100
	dc.b	$3A, $3C, $C0, $00, $60, $08, $48, $E7, $FC, $00, $3A, $3C, $E0, $00, $EF, $49, $E3, $48, $D0, $41, $D0, $45, $E1, $4C, $EB, $4C, $48, $A7, $A0, $00, $61, $86 ;0x120
	dc.b	$02, $41, $9F, $FF, $82, $44, $61, $00, $FF, $50, $54, $40, $51, $CA, $FF, $F0, $4C, $9F, $00, $05, $06, $40, $00, $80, $51, $CB, $FF, $E0, $4C, $DF, $00, $3F ;0x140
	dc.b	$4E, $75 ;0x160
	MOVEM.l	A1/D1/D0, -(A7)
	MOVE.w	#$1000, D0
	CLR.w	D1
	MOVEA.w	#$C000, A1
	BSR.w	loc_00001C10
	MOVEM.l	(A7)+, D0/D1/A1
	RTS
	dc.b	$48, $E7, $C0, $40, $30, $3C, $10, $00, $42, $41, $32, $7C, $E0, $00, $61, $00, $FD, $88, $4C, $DF, $02, $03, $4E, $75, $48, $E7, $3F, $20, $48, $E7, $80, $80 ;0x0 (0x00001E78-0x00001F58, Entry count: 0xE0) [Unknown data]
	dc.b	$30, $3C, $00, $80, $61, $00, $1C, $86, $24, $48, $4C, $DF, $01, $01, $02, $00, $00, $0F, $02, $01, $00, $0F, $2F, $0A, $2F, $0A, $78, $07, $26, $18, $7A, $03 ;0x20
	dc.b	$7C, $07, $42, $87, $E9, $8F, $E3, $8B, $65, $04, $DE, $01, $60, $02, $DE, $00, $51, $CE, $FF, $F2, $24, $C7, $51, $CD, $FF, $E8, $51, $CC, $FF, $E0, $24, $5F ;0x40
	dc.b	$78, $1F, $22, $DA, $51, $CC, $FF, $FC, $24, $5F, $2F, $08, $20, $4A, $61, $00, $1C, $B0, $20, $5F, $4C, $DF, $04, $FC, $4E, $75, $48, $E7, $E0, $FE, $48, $E7 ;0x60
	dc.b	$80, $80, $30, $3C, $00, $80, $61, $00, $1C, $24, $24, $48, $4C, $DF, $01, $01, $36, $48, $49, $F9, $00, $06, $00, $00, $74, $2B, $20, $4C, $22, $4A, $10, $3C ;0x80
	dc.b	$00, $0F, $12, $3C, $00, $0E, $61, $00, $FF, $70, $28, $48, $20, $4A, $32, $4B, $30, $3C, $00, $40, $61, $00, $FB, $14, $D6, $FC, $00, $80, $51, $CA, $FF, $DC ;0xA0
	dc.b	$42, $80, $30, $0B, $2A, $40, $4D, $F9, $00, $06, $05, $80, $61, $00, $04, $3E, $2F, $08, $20, $4A, $61, $00, $1C, $4A, $20, $5F, $4C, $DF, $7F, $07, $4E, $75 ;0xC0
loc_00001F58:
	MOVEM.l	A1/A0/D0, -(A7)
	LEA	$00FF001A, A1
	ADDA.w	D1, A1
	SUBQ.w	#1, D0
loc_00001F66:
	MOVE.w	(A0)+, (A1)+
	DBF	D0, loc_00001F66
	BSET.b	#0, $00FF0018
	MOVEM.l	(A7)+, D0/A0/A1
	RTS
	dc.b	$48, $E7, $80, $40, $43, $F9, $00, $FF, $00, $1A, $D2, $C1, $53, $40, $32, $C2, $51, $C8, $FF, $FC, $08, $F9, $00, $00, $00, $FF, $00, $18, $4C, $DF, $02, $01 ;0x0 (0x00001F7A-0x000021BC, Entry count: 0x242) [Unknown data]
	dc.b	$4E, $75, $48, $E7, $40, $80, $70, $00, $41, $FA, $01, $18, $30, $39, $00, $FF, $28, $10, $02, $40, $00, $FF, $12, $30, $00, $00, $E1, $49, $30, $39, $00, $FF ;0x20
	dc.b	$00, $16, $02, $40, $00, $FF, $12, $30, $00, $00, $30, $39, $00, $FF, $28, $10, $D0, $41, $33, $C0, $00, $FF, $28, $10, $4C, $DF, $01, $02, $4E, $75, $61, $C2 ;0x40
	dc.b	$C0, $C1, $48, $40, $06, $40, $01, $00, $C0, $C2, $E0, $88, $4E, $75, $48, $E7, $E0, $C0, $34, $09, $04, $40, $00, $10, $6B, $46, $48, $C0, $E9, $48, $41, $F9 ;0x60
	dc.b	$00, $06, $48, $E6, $D1, $C0, $48, $E7, $80, $80, $30, $3C, $00, $40, $61, $00, $1B, $1A, $22, $48, $4C, $DF, $01, $01, $2F, $09, $10, $3C, $00, $0F, $12, $3C ;0x80
	dc.b	$00, $0E, $61, $00, $FE, $72, $20, $5F, $32, $42, $30, $3C, $00, $20, $61, $00, $FA, $18, $61, $00, $1B, $6A, $EA, $4A, $00, $42, $E0, $00, $60, $00, $00, $30 ;0xA0
	dc.b	$34, $3C, $E5, $2F, $30, $7C, $C0, $00, $30, $06, $32, $07, $61, $00, $FD, $A6, $52, $40, $61, $00, $FD, $A0, $30, $06, $52, $41, $61, $00, $FD, $98, $52, $40 ;0xC0
	dc.b	$61, $00, $FD, $92, $4C, $DF, $03, $07, $4E, $75, $4C, $DF, $03, $07, $30, $7C, $C0, $00, $30, $06, $32, $07, $61, $00, $FD, $7C, $52, $41, $52, $42, $61, $00 ;0xE0
	dc.b	$FD, $74, $52, $46, $4E, $71, $4E, $71, $4E, $71, $4E, $71, $4E, $71, $4E, $71, $4E, $71, $4E, $71, $4C, $DF, $03, $07, $4E, $75, $2F, $0E, $23, $CE, $00, $FF ;0x100
	dc.b	$28, $12, $4D, $F9, $00, $FF, $28, $4E, $48, $E6, $FF, $FC, $2C, $5F, $4E, $75, $4D, $F9, $00, $FF, $28, $16, $4C, $DE, $3F, $FF, $2C, $79, $00, $FF, $28, $12 ;0x120
	dc.b	$4E, $75, $07, $9B, $F5, $FD, $62, $D5, $D6, $C6, $E4, $5A, $22, $1D, $0F, $93, $3C, $5B, $F1, $75, $1C, $78, $FB, $70, $2D, $69, $02, $E5, $5F, $23, $DB, $DE ;0x140
	dc.b	$2F, $FF, $9F, $53, $05, $EC, $99, $17, $AA, $18, $B6, $19, $C8, $26, $DA, $B4, $C1, $90, $56, $98, $88, $74, $2B, $E9, $D3, $34, $55, $E1, $8B, $C5, $01, $2C ;0x160
	dc.b	$D9, $41, $48, $EE, $0B, $71, $B9, $DF, $82, $A9, $30, $42, $29, $85, $BE, $6B, $F3, $58, $B1, $54, $7A, $15, $CF, $50, $F6, $0C, $3A, $51, $E2, $C2, $B8, $9D ;0x180
	dc.b	$57, $67, $06, $CD, $AF, $66, $2A, $0D, $11, $6E, $1A, $F0, $E7, $CB, $ED, $31, $24, $94, $F7, $A0, $FC, $D8, $6D, $F2, $80, $76, $65, $60, $8E, $B2, $4B, $96 ;0x1A0
	dc.b	$A3, $79, $59, $BD, $10, $A1, $44, $28, $3F, $89, $46, $64, $8F, $EB, $F9, $08, $9C, $D7, $A4, $E8, $AE, $C9, $EF, $63, $B0, $45, $43, $61, $38, $C7, $09, $BB ;0x1C0
	dc.b	$52, $16, $21, $1E, $0E, $7B, $4C, $04, $25, $47, $B5, $B7, $DD, $1F, $3D, $6C, $03, $5E, $D0, $35, $86, $39, $DC, $7E, $E3, $20, $A6, $A8, $CC, $84, $7C, $6A ;0x1E0
	dc.b	$C0, $E6, $83, $40, $0A, $2E, $B3, $CA, $5C, $81, $AB, $A2, $49, $F8, $27, $97, $8D, $BF, $37, $FE, $91, $3B, $32, $7F, $9E, $72, $4E, $92, $95, $3E, $87, $77 ;0x200
	dc.b	$14, $73, $CE, $BC, $A7, $4D, $D1, $D4, $6F, $AD, $33, $4A, $C3, $8C, $FA, $13, $5D, $E0, $12, $F4, $8A, $C4, $A5, $BA, $36, $1B, $68, $EA, $9A, $D2, $7D, $AC ;0x220
	dc.b	$00, $4F ;0x240
loc_000021BC:
	MOVEM.l	A2/A1/A0/D3/D2/D1/D0, -(A7)
	CLR.l	D2
	MOVE.w	D0, D2
	LSL.l	#1, D2
	MOVE.l	A0, D3
	ADD.l	D3, D2
	EOR.l	D3, D2
	BTST.l	#$11, D2
	BEQ.w	loc_0000220A
	MOVE.w	#$8F02, $00C00004	;Predicted (Code-scan)
	MOVE.w	A1, D1	;Predicted (Code-scan)
	ANDI.w	#$3FFF, D1	;Predicted (Code-scan)
	ORI.w	#$4000, D1	;Predicted (Code-scan)
	MOVE.w	D1, $00C00004	;Predicted (Code-scan)
	MOVE.w	A1, D1	;Predicted (Code-scan)
	LSR.w	#8, D1	;Predicted (Code-scan)
	LSR.w	#6, D1	;Predicted (Code-scan)
	MOVE.w	D1, $00C00004	;Predicted (Code-scan)
	LEA	$00C00000, A1	;Predicted (Code-scan)
	SUBQ.l	#1, D0	;Predicted (Code-scan)
loc_00002200:
	MOVE.w	(A0)+, (A1)	;Predicted (Code-scan)
	DBF	D0, loc_00002200	;Predicted (Code-scan)
	BRA.w	loc_0000229A	;Predicted (Code-scan)
loc_0000220A:
	LINK.w	A3, #-$00000010
	MOVE.w	A1, D1
	LSR.w	#8, D1
	LSR.w	#6, D1
	ORI.w	#$0080, D1
	MOVE.w	D1, -(A3)
	MOVE.w	A1, D1
	ANDI.w	#$3FFF, D1
	ORI.w	#$4000, D1
	MOVE.w	D1, -(A3)
	MOVE.l	A0, D1
	SWAP	D1
	LSR.w	#1, D1
	ANDI.w	#$007F, D1
	ORI.w	#$9700, D1
	MOVE.w	D1, -(A3)
	MOVE.l	A0, D1
	LSR.l	#1, D1
	LSR.w	#8, D1
	ANDI.w	#$00FF, D1
	ORI.w	#$9600, D1
	MOVE.w	D1, -(A3)
	MOVE.w	A0, D1
	LSR.w	#1, D1
	ANDI.w	#$00FF, D1
	ORI.w	#$9500, D1
	MOVE.w	D1, -(A3)
	MOVE.w	D0, D1
	LSR.w	#8, D1
	ANDI.w	#$00FF, D1
	ORI.w	#$9400, D1
	MOVE.w	D1, -(A3)
	ANDI.w	#$00FF, D0
	ORI.w	#$9300, D0
	MOVE.w	D0, -(A3)
	MOVE.w	#$8F02, -(A3)
	LEA	$00C00004, A2
	BSR.w	loc_00001A0E
	MOVE.w	A1, D1
	ANDI.w	#$3FFF, D1
	ORI.w	#$4000, D1
	MOVE.w	D1, (A2)
	MOVE.w	A1, D1
	LSR.w	#8, D1
	LSR.w	#6, D1
	MOVE.w	D1, (A2)
	MOVE.w	(A0), $00C00000
	BSR.w	loc_0000184C
	UNLK	A3
loc_0000229A:
	MOVEM.l	(A7)+, D0/D1/D2/D3/A0/A1/A2
	RTS
	dc.b	$48, $E7, $C0, $C0, $33, $FC, $8F, $02, $00, $C0, $00, $04, $32, $09, $02, $41, $3F, $FF, $00, $41, $40, $00, $33, $C1, $00, $C0, $00, $04, $32, $09, $E0, $49 ;0x0 (0x000022A0-0x000022DC, Entry count: 0x3C) [Unknown data]
	dc.b	$EC, $49, $33, $C1, $00, $C0, $00, $04, $43, $F9, $00, $C0, $00, $00, $53, $80, $32, $98, $51, $C8, $FF, $FC, $4C, $DF, $03, $03, $4E, $75 ;0x20
	TRAP	#2
	MOVEA.l	#$000F6000, A1
	MOVE.w	#$1FFF, D1
	MOVEA.l	#$00A00000, A0
	MOVE.w	#$0100, $00A11200
	MOVE.w	#$0100, $00A11100
loc_000022FE:
	BTST.b	#0, $00A11100
	BNE.b	loc_000022FE
loc_00002308:
	MOVE.b	(A1)+, D0
loc_0000230A:
	MOVE.b	D0, (A0)
	CMP.b	(A0), D0
	BNE.b	loc_0000230A
	ADDQ.l	#1, A0
	DBF	D1, loc_00002308
	MOVE.w	#0, $00A01FFE
	MOVE.w	#0, $00A11100
	MOVE.w	#0, $00A11200
	NOP
	NOP
	NOP
	NOP
	MOVE.w	#$0100, $00A11200
	MOVE.w	#$C34F, D0
loc_00002342:
	DBF	D0, loc_00002342
	CLR.w	$00FF2852
	TRAP	#3
	RTS
loc_00002350:
	TST.w	D0
	BEQ.b	loc_0000235C
	CMP.w	$00FF2852, D0
	BNE.b	loc_0000235E
loc_0000235C:
	RTS	;Predicted (Code-scan)
loc_0000235E:
	CMPI.w	#$00FF, D0
	BEQ.b	loc_00002376
	MOVE.w	D0, $00FF2852
	CMPI.w	#$00FD, D0
	BCS.b	loc_00002376
	CLR.w	$00FF2852	;Predicted (Code-scan)
loc_00002376:
	MOVE.l	A0, -(A7)
	MOVEA.l	#$00A01FFF, A0
	TRAP	#1
	MOVEA.l	(A7)+, A0
	RTS
loc_00002384:
	MOVEM.l	A6/A5/A4/A3/A2/A1/A0/D7/D6/D5/D4/D3/D2/D1/D0, -(A7)
	MOVE.l	D0, -(A7)
	MOVE.w	#$0C00, D0
	BSR.w	loc_00003B24
	MOVE.l	(A7)+, D0
	MOVE.l	A0, -(A7)
	MOVE.w	(A6), D0
	ANDI.w	#$C000, D0
	CMPI.w	#$8000, D0
	BEQ.b	loc_000023AE
	MOVEA.l	(A7)+, A0	;Predicted (Code-scan)
	BSR.w	loc_00003B98	;Predicted (Code-scan)
	MOVEM.l	(A7)+, D0/D1/D2/D3/D4/D5/D6/D7/A0/A1/A2/A3/A4/A5/A6	;Predicted (Code-scan)
	RTS	;Predicted (Code-scan)
loc_000023AE:
	TRAP	#2
	MOVEA.l	A6, A4
	CLR.l	D0
	MOVE.w	(A6)+, D0
	ANDI.w	#$3FFF, D0
	LSL.w	#1, D0
	ADDA.l	D0, A4
	MOVEA.l	A0, A1
	CLR.w	D1
	MOVE.w	(A6)+, D0
	MOVEQ	#$00000010, D7
	MOVE.w	(A6)+, D6

; this is loop point for decompressing image data
CheckFirstBit:
	LSL.w	#1, D6	; double d6, which came from $605f0 ish
	BCS.w	CopySingleWord	; check for overflow? 
	SUBQ.w	#1, D7	; d7 is bit counter, starting at $10
	BNE.w	Check2ndBit
	MOVE.w	(A6)+, D6
	MOVEQ	#$00000010, D7
	
	; probably $23d8 ?
Check2ndBit:
	LSL.w	#1, D6
	BCS.w	RepeatedSequenceBranch
	SUBQ.w	#1, D7
	BNE.w	Check3rdBit
	MOVE.w	(A6)+, D6	; new instruction byte?
	MOVEQ	#$00000010, D7
	
Check3rdBit:
	LSL.w	#1, D6
	BCS.w	loc_00002446
	SUBQ.w	#1, D7
	BNE.w	Check4thBit
	MOVE.w	(A6)+, D6
	MOVEQ	#$00000010, D7
	
Check4thBit:
	LSL.w	#1, D6
	BCC.w	loc_000025FA
	SUBQ.w	#1, D7
	BNE.w	loc_0000245E
	MOVE.w	(A6)+, D6
	MOVEQ	#$00000010, D7
	BRA.w	loc_0000245E
	
	; $240c
CopySingleWord:
	SUBQ.w	#1, D7
	BNE.w	CopyImageByteToRAM
	MOVE.w	(A6)+, D6	; new counter/ control byte?
	MOVEQ	#$00000010, D7
	BRA.w	CopyImageByteToRAM
	
; $241a	, read 2 bits into D5...
RepeatedSequenceBranch:
	SUBQ.w	#1, D7
	BNE.w	loc_00002424
	MOVE.w	(A6)+, D6
	MOVEQ	#$00000010, D7	; reset x counter ??
	; we're copying first bit from the "control" byte into D5 !
loc_00002424:
	CLR.w	D5
	LSL.w	#1, D6
	ROXL.w	#1, D5	; was 0, turned into 1, it might be pulling the carry bit over? X bit technically
	SUBQ.w	#1, D7
	BNE.w	loc_00002434
	MOVE.w	(A6)+, D6
	MOVEQ	#$00000010, D7
	
loc_00002434:
	LSL.w	#1, D6	; copying next (2nd) bit into D5
	ROXL.w	#1, D5
	SUBQ.w	#1, D7
	BNE.w	SetupRepeatedSequence
	MOVE.w	(A6)+, D6
	MOVEQ	#$00000010, D7
	BRA.w	SetupRepeatedSequence
loc_00002446:
	SUBQ.w	#1, D7
	BNE.w	RepeatSingleWord
	MOVE.w	(A6)+, D6
	MOVEQ	#$00000010, D7
	BRA.w	RepeatSingleWord
	
	
CopyImageByteToRAM:
	MOVE.w	(A4)+, D0	; next image byte
	MOVE.w	D0, (A1)+	; into RAM at $32b8 + (2 * d1)
	ADDQ.w	#1, D1
	BRA.w	CheckByteCounter
	
loc_0000245E:
	MOVEA.l	A1, A3
	SUBQ.l	#2, A3
	MOVE.w	(A3), (A1)+
	ADDQ.w	#1, D1
	BRA.w	CheckByteCounter
	
RepeatSingleWord:
	CLR.l	D5
	MOVEQ	#8, D2
loc_0000246E:
	LSL.w	#1, D6
	ROXL.w	#1, D5
	SUBQ.w	#1, D7
	BNE.w	loc_0000247C
	MOVE.w	(A6)+, D6
	MOVEQ	#$00000010, D7
loc_0000247C:
	DBF	D2, loc_0000246E	; this started from 3rd bit set, now reading 8 more bits to get offset
	ADDQ.w	#1, D5
	LSL.w	#1, D5
	MOVEA.l	A1, A3
	SUBA.l	D5, A3
	MOVE.w	(A3), (A1)+
	ADDQ.w	#1, D1
	BRA.w	CheckByteCounter
	
	; $2490
SetupRepeatedSequence:
	TST.w	D5	; this was roxl'd from A6 lsl's
	BEQ.w	D5NoBits	; sets D2 to $8
	SUBQ.w	#1, D5	; D5 is rotated bits from control byte, so bit 1 here was second bit from control byte
	BEQ.w	D5Bit1	; this is actually first lsl no overflow, second lsl overflow to get $1
	SUBQ.w	#1, D5	
	BEQ.w	D5Bit2	; clears D4 as well... this is actually.. first lsl overflow, second lsl no overflow to get $2	
	CLR.l	D5	; 3 overflow condition i guess, bits 1 and 2 set
	MOVEQ	#2, D2	; loop counter for roxls, set to $2 if any bits were set
	
GetSequenceRepeatCount:
	LSL.w	#1, D6	; setting up d5 again with 2 bits
	ROXL.w	#1, D5
	SUBQ.w	#1, D7
	BNE.w	loc_000024B4
	MOVE.w	(A6)+, D6
	MOVEQ	#$00000010, D7
loc_000024B4:
	DBF	D2, GetSequenceRepeatCount
	MOVE.w	D5, D4
	ADDQ.w	#1, D4	; d4 was 7 from 3 roxls, now $8
	
	; this gets word size of repeated sequence.. to copy $3324 $4444 $3324 $4444, d3 will be set to 4
	CLR.l	D5
	MOVEQ	#3, D2	; loop counter..
GetSequenceSize:
	LSL.w	#1, D6	; d6 is 0...
	ROXL.w	#1, D5
	SUBQ.w	#1, D7
	BNE.w	loc_000024CE
	MOVE.w	(A6)+, D6
	MOVEQ	#$00000010, D7
loc_000024CE:
	DBF	D2, GetSequenceSize
	MOVE.w	D5, D3
	ADDQ.w	#1, D3	; number of old bytes to copy?
	
	CLR.l	D5
	MOVEQ	#8, D2
	; when copying previously written bytes, read next 8 bits to get negative offset amount
GetOldByteOffset:
	LSL.w	#1, D6
	ROXL.w	#1, D5
	SUBQ.w	#1, D7
	BNE.w	loc_000024E8
	MOVE.w	(A6)+, D6	; new control byte, $bf2..
	MOVEQ	#$00000010, D7	
loc_000024E8:
	DBF	D2, GetOldByteOffset	
	ADDQ.w	#1, D5	; d5 now $2
	LSL.w	#1, D5	; now $4
	BRA.w	GetOlderByte
D5Bit2:
	CLR.w	D4
	CLR.l	D5
	MOVEQ	#3, D2
loc_000024FA:
	LSL.w	#1, D6
	ROXL.w	#1, D5
	SUBQ.w	#1, D7
	BNE.w	loc_00002508
	MOVE.w	(A6)+, D6
	MOVEQ	#$00000010, D7
loc_00002508:
	DBF	D2, loc_000024FA
	MOVE.w	D5, D3
	ADDQ.w	#1, D3	;number of old bytes to copy?
	CLR.l	D5
	MOVEQ	#8, D2
loc_00002514:
	LSL.w	#1, D6
	ROXL.w	#1, D5
	SUBQ.w	#1, D7
	BNE.w	loc_00002522
	MOVE.w	(A6)+, D6
	MOVEQ	#$00000010, D7
loc_00002522:
	DBF	D2, loc_00002514
	ADDQ.w	#1, D5
	LSL.w	#1, D5
	BRA.w	GetOlderByte
D5NoBits:
	CLR.w	D4
	MOVEQ	#1, D3	; number of old bytes to copy?
	CLR.l	D5
	MOVEQ	#8, D2
loc_00002536:
	LSL.w	#1, D6
	ROXL.w	#1, D5
	SUBQ.w	#1, D7
	BNE.w	loc_00002544
	MOVE.w	(A6)+, D6
	MOVEQ	#$00000010, D7
loc_00002544:
	DBF	D2, loc_00002536
	ADDQ.w	#1, D5
	LSL.w	#1, D5
GetOlderByte:
	MOVEA.l	A1, A3	; A1 is next ram location to write $32c8
	SUBA.w	D5, A3	; A3 went back 4 to $32c4, prev byte.. 
	
SetupOlderByteCopy:
	MOVE.l	A3, -(A7)	; this saves the location from which we're copying bytes. it's $3324 $4444
	MOVE.l	D3, D2
CopyOlderByte:
	MOVE.w	(A3)+, (A1)+
	ADDQ.w	#1, D1
	DBF	D2, CopyOlderByte	; length of repeating sequence (words)
	MOVEA.l	(A7)+, A3
	DBF	D4, SetupOlderByteCopy	; # of times to repeat sequence
	BRA.w	CheckByteCounter
	
D5Bit1:
	CLR.l	D5
	MOVEQ	#2, D2
loc_0000256A:
	LSL.w	#1, D6
	ROXL.w	#1, D5
	SUBQ.w	#1, D7
	BNE.w	loc_00002578
	MOVE.w	(A6)+, D6
	MOVEQ	#$00000010, D7
loc_00002578:
	DBF	D2, loc_0000256A
	MOVE.w	D5, D4
	ADDQ.w	#1, D4
	CLR.l	D5
	MOVEQ	#8, D2
loc_00002584:
	LSL.w	#1, D6
	ROXL.w	#1, D5
	SUBQ.w	#1, D7
	BNE.w	loc_00002592
	MOVE.w	(A6)+, D6
	MOVEQ	#$00000010, D7
loc_00002592:
	DBF	D2, loc_00002584
	ADDQ.w	#1, D5
	LSL.w	#1, D5
	MOVEA.l	A1, A3
	SUBA.l	D5, A3
loc_0000259E:
	MOVE.w	(A3), (A1)+
	ADDQ.w	#1, D1
	DBF	D4, loc_0000259E
	
; $25a6	
CheckByteCounter:
	CMPI.w	#$0514, D1	; check if byte counter < 1,300
	BCS.w	CheckFirstBit
	MOVE.w	D1, D2
	SUBI.w	#$0200, D2
	CMPA.l	#$00010000, A5	; checking vram location? our logo is at $6000
	BCC.w	loc_000025DC	; overflow?
	MOVEM.l	A1/D0, -(A7)
	MOVE.w	D2, D0
	MOVEA.w	A5, A1
	JSR	loc_000021BC
	MOVEM.l	(A7)+, D0/A1
	LSL.w	#1, D2
	ADDA.w	D2, A5
	MOVEA.l	A0, A2
	ADDA.w	D2, A2
	BRA.w	loc_000025E6
loc_000025DC:
	SUBQ.w	#1, D2	;Predicted (Code-scan)
	MOVEA.l	A0, A2	;Predicted (Code-scan)
loc_000025E0:
	MOVE.w	(A2)+, (A5)+	;Predicted (Code-scan)
	DBF	D2, loc_000025E0	;Predicted (Code-scan)
loc_000025E6:
	MOVE.w	#$01FF, D2
	MOVEA.l	A0, A1
loc_000025EC:
	MOVE.w	(A2)+, (A1)+
	DBF	D2, loc_000025EC
	MOVE.w	#$0200, D1
	BRA.w	CheckFirstBit
loc_000025FA:
	TST.w	D1
	BEQ.b	loc_0000261E
	CMPA.l	#$00010000, A5
	BCC.w	loc_00002616
	MOVE.w	D1, D0
	MOVEA.w	A5, A1
	JSR	loc_000021BC
	BRA.w	loc_0000261E
loc_00002616:
	SUBQ.w	#1, D1
loc_00002618:
	MOVE.w	(A0)+, (A5)+
	DBF	D1, loc_00002618
loc_0000261E:
	TRAP	#3
	MOVEA.l	(A7)+, A0
	BSR.w	loc_00003B98
	MOVEM.l	(A7)+, D0/D1/D2/D3/D4/D5/D6/D7/A0/A1/A2/A3/A4/A5/A6
	RTS
loc_0000262C:
	LEA	$00FF011C, A0
	MOVE.w	#1, (A0)+
	CLR.l	(A0)+
	MOVE.w	#1, (A0)+
	MOVE.w	#$009D, D0
loc_00002640:
	CLR.l	(A0)+
	DBF	D0, loc_00002640
	MOVE.w	#1, $00FF2854
	CLR.w	$00FF2856
	RTS
loc_00002656:
	TST.w	(A0)
	BNE.b	loc_0000265C
loc_0000265A:
	RTS	;Predicted (Code-scan)
loc_0000265C:
	CMPI.w	#$0200, D0
	BCC.b	loc_0000265A
	CMPI.w	#$0200, D1
	BCC.b	loc_0000265A
	MOVEM.l	A2/A1/A0/D7/D6/D5/D4/D3/D2/D1/D0, -(A7)
	LEA	$00FF011C, A1
	MOVEA.l	A1, A2
	MOVE.w	$00FF2854, D6
	MOVE.w	D6, D5
	LSL.w	#3, D6
	ANDI.l	#$000003FF, D6
	ADDA.l	D6, A1
	MOVE.w	$00FF2856, D6
	LSL.w	#3, D6
	ANDI.l	#$000003FF, D6
	ADDA.l	D6, A2
	ADDQ.l	#2, A2
	MOVE.w	(A2), D6
	ANDI.w	#$0F00, D6
	OR.w	D5, D6
	MOVE.w	D6, (A2)
	CLR.w	D7
	BSR.b	loc_00002710
	MOVE.w	D5, $00FF2854
	SUBQ.w	#1, D5
	MOVE.w	D5, $00FF2856
	MOVEM.l	(A7)+, D0/D1/D2/D3/D4/D5/D6/D7/A0/A1/A2
	RTS
	dc.b	$4A, $50, $66, $02, $4E, $75, $0C, $40, $02, $00, $64, $F8, $0C, $41, $02, $00, $64, $F2, $48, $E7, $FF, $E0, $43, $F9, $00, $FF, $01, $1C, $24, $49, $3C, $39 ;0x0 (0x000026BA-0x00002710, Entry count: 0x56) [Unknown data]
	dc.b	$00, $FF, $28, $54, $3A, $06, $E7, $4E, $02, $86, $00, $00, $03, $FF, $D3, $C6, $3C, $39, $00, $FF, $01, $1E, $3E, $06, $02, $47, $00, $7F, $02, $46, $0F, $00 ;0x20
	dc.b	$8C, $45, $33, $C6, $00, $FF, $01, $1E, $61, $0C, $33, $C5, $00, $FF, $28, $54, $4C, $DF, $07, $FF, $4E, $75 ;0x40
loc_00002710:
	MOVE.w	(A0)+, D4
	SUBQ.w	#1, D4
	LSR.w	#5, D2
loc_00002716:
	MOVE.w	(A0)+, D6
	ADD.w	D1, D6
	ADDQ.w	#1, D5
	MOVE.w	D6, (A1)+
	MOVE.w	(A0)+, D6
	TST.w	D4
	BEQ.b	loc_00002728
	OR.w	D5, D6
	BRA.b	loc_0000272A
loc_00002728:
	OR.w	D7, D6
loc_0000272A:
	MOVE.w	D6, (A1)+
	MOVE.w	(A0)+, D6
	ADD.w	D2, D6
	OR.w	D3, D6
	MOVE.w	D6, (A1)+
	MOVE.w	(A0)+, D6
	ADD.w	D0, D6
	TST.w	D6
	BNE.b	loc_0000273E
	ADDQ.w	#1, D6	;Predicted (Code-scan)
loc_0000273E:
	MOVE.w	D6, (A1)+
	DBF	D4, loc_00002716
	RTS
loc_00002746:
	MOVE.l	D0, -(A7)
	LEA	$00FF285E, A2
	LEA	$00FF289E, A3
	CLR.l	D0
	MOVE.w	A0, D0
	LSL.l	#1, D0
	ADDA.l	D0, A2
	LSL.l	#1, D0
	ADDA.l	D0, A3
	LSL.l	#2, D0
	ADDA.l	D0, A3
	MOVE.l	(A7)+, D0
	RTS
loc_00002768:
	MOVEM.l	A3/A2/A1/D4/D3/D2/D1/D0, -(A7)
	LEA	$00FF285E, A2
	LEA	$00FF289E, A3
	CLR.w	D3
loc_0000277A:
	CMPI.w	#$FFFF, (A2)
	BEQ.b	loc_0000279A
	ADDQ.w	#1, D3	;Predicted (Code-scan)
	ADDQ.l	#2, A2	;Predicted (Code-scan)
	ADDA.l	#$00000014, A3	;Predicted (Code-scan)
	CMPI.w	#$0020, D3	;Predicted (Code-scan)
	BNE.b	loc_0000277A	;Predicted (Code-scan)
	MOVEA.w	#$FFFF, A0	;Predicted (Code-scan)
	MOVEM.l	(A7)+, D0/D1/D2/D3/A1/A2/A3	;Predicted (Code-scan)
	RTS	;Predicted (Code-scan)
loc_0000279A:
	MOVE.l	A0, (A3)+
	MOVE.w	#2, (A3)+
	MOVE.w	A1, (A3)+
	EXT.l	D0
	LSL.l	#6, D0
	MOVE.l	D0, (A3)+
	ROL.w	#8, D2
	ROL.w	#5, D2
	MOVE.w	D2, (A3)+
	CLR.w	(A3)+
	EXT.l	D1
	LSL.l	#6, D1
	MOVE.l	D1, (A3)+
	MOVE.w	(A0), (A2)
	MOVEA.w	D3, A0
	MOVEM.l	(A7)+, D0/D1/D2/D3/D4/A1/A2/A3
	RTS
	dc.b	$48, $E7, $00, $30, $61, $80, $34, $BC, $FF, $FF, $4C, $DF, $0C, $00, $4E, $75, $33, $C0, $00, $FF, $28, $5A, $33, $C1, $00, $FF, $28, $5C, $4E, $75, $48, $E7 ;0x0 (0x000027C0-0x000027F8, Entry count: 0x38) [Unknown data]
	dc.b	$C0, $30, $61, $00, $FF, $62, $48, $C0, $D1, $AB, $00, $08, $48, $C1, $D3, $AB, $00, $10, $4C, $DF, $0C, $03, $4E, $75 ;0x20
loc_000027F8:
	MOVEM.l	A3/A2/D1/D0, -(A7)	;Predicted (Code-scan)
	BSR.w	loc_00002746	;Predicted (Code-scan)
	EXT.l	D0	;Predicted (Code-scan)
	LSL.l	#6, D0	;Predicted (Code-scan)
	MOVE.l	D0, $8(A3)	;Predicted (Code-scan)
	EXT.l	D1	;Predicted (Code-scan)
	LSL.l	#6, D1	;Predicted (Code-scan)
	MOVE.l	D1, $10(A3)	;Predicted (Code-scan)
	MOVEM.l	(A7)+, D0/D1/A2/A3	;Predicted (Code-scan)
	RTS	;Predicted (Code-scan)
	dc.b	$48, $E7, $40, $30, $61, $00, $FF, $2A, $32, $2B, $00, $0E, $08, $C1, $00, $0D, $08, $C1, $00, $0C, $02, $41, $FF, $00, $4A, $40, $66, $08, $50, $41, $08, $81 ;0x0 (0x00002816-0x0000286E, Entry count: 0x58) [Unknown data]
	dc.b	$00, $0B, $60, $06, $58, $41, $08, $C1, $00, $0B, $37, $41, $00, $0E, $4C, $DF, $0C, $02, $4E, $75, $48, $E7, $80, $30, $61, $00, $FE, $F6, $30, $2B, $00, $0E ;0x20
	dc.b	$08, $80, $00, $0D, $08, $80, $00, $0C, $37, $40, $00, $0E, $08, $AB, $00, $04, $00, $0E, $4C, $DF, $0C, $01, $4E, $75 ;0x40
loc_0000286E:
	dc.b	$00, $00, $28, $80 ;0x0 (0x0000286E-0x00002872, Entry count: 0x4) [Unknown data]
	dc.l	$00002876
	dc.b	$08, $F9, $00, $01, $00, $FF, $00, $18, $4E, $75 ;0x0 (0x00002876-0x00002880, Entry count: 0xA) [Unknown data]
	LEA	$00FF285E, A0
	MOVEQ	#$0000001F, D0
loc_00002888:
	MOVE.w	#$FFFF, (A0)+
	DBF	D0, loc_00002888
	MOVE.w	#$013F, D0
	LEA	$00FF289E, A0
loc_0000289A:
	CLR.w	(A0)+
	DBF	D0, loc_0000289A
	MOVE.w	#$0080, $00FF285A
	MOVE.w	#$0080, $00FF285C
	CLR.w	$00FF2858
loc_000028B6:
	TRAP	#5
	ORI.b	#$1F, D1	;Predicted (Code-scan)
loc_000028BC:
	CLR.l	D3
	CLR.w	D2
	LEA	$00FF289C, A4
	LEA	$00FF2B0A, A5
	MOVEA.l	#$FFFFFFFF, A2
loc_000028D2:
	CMPI.w	#$FFFF, (A4)
	BEQ.b	loc_00002906
	MOVE.w	$E(A5), D0
	BTST.l	#$0F, D0
	BNE.b	loc_00002906
	BTST.l	#$0E, D0
	BNE.b	loc_00002906
	MOVE.w	$C(A5), D0
	ANDI.w	#$1FFF, D0
	CMP.w	D0, D2
	BCS.b	loc_000028FC
	BNE.b	loc_00002906
	CMP.l	$10(A5), D3
	BGT.b	loc_00002906
loc_000028FC:
	MOVEA.l	A4, A2
	MOVEA.l	A5, A3
	MOVE.l	$10(A5), D3
	MOVE.w	D0, D2
loc_00002906:
	SUBQ.l	#2, A4
	SUBA.l	#$00000014, A5
	DBF	D7, loc_000028D2
	CMPA.l	#$FFFFFFFF, A2
	BNE.b	loc_0000293E
	LEA	$00FF289E, A5
	MOVEQ	#$0000001F, D0
loc_00002922:
	BCLR.b	#6, $E(A5)
	ADDA.l	#$00000014, A5
	DBF	D0, loc_00002922
	BSET.b	#1, $00FF0018
	BRA.w	loc_000028B6
loc_0000293E:
	MOVE.w	$E(A3), D0
	BTST.l	#$0D, D0
	BEQ.b	loc_00002968
	TST.b	D0	;Predicted (Code-scan)
	BNE.b	loc_0000295C	;Predicted (Code-scan)
	MOVE.b	#4, D0	;Predicted (Code-scan)
	BCHG.l	#$0C, D0	;Predicted (Code-scan)
	BTST.l	#$0B, D0	;Predicted (Code-scan)
	BEQ.b	loc_0000295C	;Predicted (Code-scan)
	ADDQ.w	#4, D0	;Predicted (Code-scan)
loc_0000295C:
	SUBQ.w	#1, D0	;Predicted (Code-scan)
	MOVE.w	D0, $E(A3)	;Predicted (Code-scan)
	BTST.l	#$0C, D0	;Predicted (Code-scan)
	BNE.b	loc_0000296A	;Predicted (Code-scan)
loc_00002968:
	BSR.b	loc_00002974
loc_0000296A:
	BSET.b	#6, $E(A3)
	BRA.w	loc_000028BC-2
loc_00002974:
	TST.w	$00FF2858
	BNE.b	loc_000029AC
	SUBQ.w	#1, (A2)
	BNE.b	loc_000029AC
	MOVEA.l	A3, A4
	MOVEA.l	(A4)+, A0
	ADDQ.w	#4, (A4)
	CLR.l	D0
	MOVE.w	(A4), D0
	ADDA.l	D0, A0
	MOVE.w	(A0)+, D1
	TST.w	D1
	BNE.b	loc_0000299A
	MOVE.w	#$FFFF, (A2)	;Predicted (Code-scan)
	BRA.w	loc_000029E6	;Predicted (Code-scan)
loc_0000299A:
	CMPI.w	#$FFFF, D1
	BNE.b	loc_000029A8
	MOVEA.l	A3, A4
	MOVEA.l	(A4)+, A0
	CLR.w	(A4)
	MOVE.w	(A0)+, D1
loc_000029A8:
	MOVE.w	D1, (A2)
	ADDQ.w	#2, (A4)
loc_000029AC:
	MOVEA.l	A3, A4
	MOVEA.l	(A4)+, A1
	CLR.l	D0
	MOVE.w	(A4)+, D0
	ADDA.l	D0, A1
	TST.l	(A1)
	BEQ.b	loc_000029E6
	MOVEA.l	(A1), A0
	MOVE.w	(A4)+, D2
	MOVE.l	(A4)+, D0
	LSR.l	#6, D0
	ADDI.w	#$0080, D0
	SUB.w	$00FF285A, D0
	MOVE.w	(A4)+, D3
	ANDI.w	#$E000, D3
	ADDQ.l	#2, A4
	MOVE.l	(A4)+, D1
	LSR.l	#6, D1
	ADDI.w	#$0080, D1
	SUB.w	$00FF285C, D1
	BSR.w	loc_00002656
loc_000029E6:
	RTS
	dc.b	$48, $E7, $E0, $30, $45, $F9, $00, $FF, $28, $5E, $47, $F9, $00, $FF, $28, $9E, $48, $C0, $48, $C1, $74, $1F, $0C, $5A, $FF, $FF, $67, $08, $D1, $AB, $00, $08 ;0x0 (0x000029E8-0x00002A1C, Entry count: 0x34) [Unknown data]
	dc.b	$D3, $AB, $00, $10, $D7, $FC, $00, $00, $00, $14, $51, $CA, $FF, $EA, $4C, $DF, $0C, $07, $4E, $75 ;0x20
loc_00002A1C:
	MOVEM.l	A3/A2/A1/A0/D4/D3, -(A7)
	TST.w	D2
	BEQ.b	loc_00002A4E
	BSR.w	loc_00002746
	MOVE.w	D0, D3
	MOVE.w	D1, D4
	EXT.l	D3
	EXT.l	D4
	LSL.l	#6, D3
	LSL.l	#6, D4
	SUB.l	$8(A3), D3
	SUB.l	$10(A3), D4
	DIVS.w	D2, D3
	DIVS.w	D2, D4
	EXT.l	D3
	EXT.l	D4
	ADD.l	D3, $8(A3)
	ADD.l	D4, $10(A3)
	SUBQ.w	#1, D2
loc_00002A4E:
	MOVEM.l	(A7)+, D3/D4/A0/A1/A2/A3
	RTS
	dc.b	$48, $E7, $00, $30, $61, $00, $FC, $EC, $26, $C9, $36, $FC, $00, $02, $36, $C0, $34, $91, $4C, $DF, $0C, $00, $4E, $75, $48, $E7, $00, $30, $61, $00, $FC, $D4 ;0x0 (0x00002A54-0x00002B32, Entry count: 0xDE) [Unknown data]
	dc.b	$E1, $58, $EB, $58, $37, $40, $00, $0C, $4C, $DF, $0C, $00, $4E, $75, $48, $E7, $80, $30, $61, $00, $FC, $BE, $30, $2B, $00, $0E, $08, $C0, $00, $0F, $37, $40 ;0x20
	dc.b	$00, $0E, $4C, $DF, $0C, $01, $4E, $75, $48, $E7, $80, $30, $61, $00, $FC, $A4, $30, $2B, $00, $0E, $08, $80, $00, $0F, $37, $40, $00, $0E, $4C, $DF, $0C, $01 ;0x40
	dc.b	$4E, $75, $48, $E7, $00, $30, $61, $00, $FC, $8A, $20, $53, $32, $6B, $00, $06, $4C, $DF, $0C, $00, $4E, $75, $48, $E7, $60, $30, $45, $F9, $00, $FF, $28, $5E ;0x60
	dc.b	$47, $F9, $00, $FF, $28, $9E, $74, $1F, $0C, $5A, $FF, $FF, $67, $0C, $32, $2B, $00, $0E, $08, $C1, $00, $0F, $37, $41, $00, $0E, $D7, $FC, $00, $00, $00, $14 ;0x80
	dc.b	$51, $CA, $FF, $E6, $4C, $DF, $0C, $06, $4E, $75, $48, $E7, $60, $30, $45, $F9, $00, $FF, $28, $5E, $47, $F9, $00, $FF, $28, $9E, $74, $1F, $0C, $5A, $FF, $FF ;0xA0
	dc.b	$67, $0C, $32, $2B, $00, $0E, $08, $81, $00, $0F, $37, $41, $00, $0E, $D7, $FC, $00, $00, $00, $14, $51, $CA, $FF, $E6, $4C, $DF, $0C, $06, $4E, $75 ;0xC0
loc_00002B32:
	dc.b	$00, $00, $2B, $42 ;0x0 (0x00002B32-0x00002B36, Entry count: 0x4) [Unknown data]
	dc.l	$00002B3A
	dc.b	$42, $79, $00, $FF, $01, $1A, $4E, $75 ;0x0 (0x00002B3A-0x00002B42, Entry count: 0x8) [Unknown data]
	MOVEQ	#3, D0
	LEA	$00FF2B20, A0
loc_00002B4A:
	MOVE.w	#$FFFF, (A0)+
	CLR.w	(A0)+
	CLR.l	(A0)+
	DBF	D0, loc_00002B4A
	MOVEQ	#$0000003F, D0
	LEA	$00FF001A, A6
	LEA	$00FF009A, A5
loc_00002B64:
	MOVE.w	(A6)+, (A5)+
	DBF	D0, loc_00002B64
	MOVE.w	#1, $00FF011A
	CLR.w	$00FF2B1E
loc_00002B78:
	TRAP	#5
	ORI.b	#$B9, D1	;Predicted (Code-scan)
	ORI.b	#$FF, D0	;Predicted (Code-scan)
	ORI.b	#8, (A0)+	;Predicted (Code-scan)
	MOVE.w	#1, $00FF2B1E
loc_00002B8E:
	LEA	$00FF001A, A6
	LEA	$00FF009A, A5
	MOVEQ	#$0000003F, D0
loc_00002B9C:
	MOVE.w	(A6)+, (A5)+
	DBF	D0, loc_00002B9C
	LEA	$00FF001A, A6
	LEA	$00FF009A, A5
	LEA	$00FF2B20, A0
	MOVEQ	#3, D7
loc_00002BB6:
	CMPI.b	#$FF, (A0)
	BEQ.w	loc_00002C5C
	CLR.w	D0
	MOVE.b	(A0), D0
	MOVE.w	$4(A0), D1
loc_00002BC6:
	MOVE.w	(A6,D0.w), D2
	MOVE.w	D2, D4
	ANDI.w	#$000F, D4
	MULU.w	D1, D4
	LSR.w	#8, D4
	LSR.w	#4, D2
	MOVE.w	D2, D3
	ANDI.w	#$000F, D3
	MULU.w	D1, D3
	LSR.w	#4, D3
	ANDI.w	#$00F0, D3
	OR.w	D3, D4
	LSR.w	#4, D2
	MULU.w	D1, D2
	ANDI.w	#$0F00, D2
	OR.w	D2, D4
	MOVE.w	D4, (A5,D0.w)
	CMP.b	$1(A0), D0
	BEQ.w	loc_00002C00
	ADDQ.w	#2, D0
	BRA.b	loc_00002BC6
loc_00002C00:
	TST.b	$6(A0)
	BEQ.b	loc_00002C54
	BPL.b	loc_00002C34
	SUB.w	$2(A0), D1	;Predicted (Code-scan)
	BPL.b	loc_00002C2E	;Predicted (Code-scan)
	CLR.w	D1	;Predicted (Code-scan)
	MOVE.b	(A0), D1	;Predicted (Code-scan)
	CLR.w	D2	;Predicted (Code-scan)
	MOVE.b	$1(A0), D2	;Predicted (Code-scan)
loc_00002C18:
	CLR.w	(A6,D1.w)	;Predicted (Code-scan)
	CMP.w	D2, D1	;Predicted (Code-scan)
	BEQ.b	loc_00002C24	;Predicted (Code-scan)
	ADDQ.w	#2, D1	;Predicted (Code-scan)
	BRA.b	loc_00002C18	;Predicted (Code-scan)
loc_00002C24:
	BSR.w	loc_00002E1C	;Predicted (Code-scan)
	MOVE.w	#$FFFF, (A0)	;Predicted (Code-scan)
	CLR.w	D1	;Predicted (Code-scan)
loc_00002C2E:
	MOVE.w	D1, $4(A0)	;Predicted (Code-scan)
	BRA.b	loc_00002C54	;Predicted (Code-scan)
loc_00002C34:
	CMPI.w	#$0100, D1
	BCC.b	loc_00002C4A
	ADD.w	$2(A0), D1
	CMPI.w	#$0100, D1
	BCS.b	loc_00002C50
	MOVE.w	#$0100, D1	;Predicted (Code-scan)
	BRA.b	loc_00002C50	;Predicted (Code-scan)
loc_00002C4A:
	MOVE.w	#$FFFF, (A0)	;Predicted (Code-scan)
	CLR.w	D1	;Predicted (Code-scan)
loc_00002C50:
	MOVE.w	D1, $4(A0)
loc_00002C54:
	MOVE.w	#1, $00FF2B1E
loc_00002C5C:
	ADDQ.l	#8, A0
	DBF	D7, loc_00002BB6
	TST.w	$00FF2B1E
	BEQ.w	loc_00002B78
	BSET.b	#0, $00FF0018
	CLR.w	$00FF2B1E
	BRA.w	loc_00002B78
loc_00002C7E:
	MOVEM.l	A0/D3, -(A7)
	BSR.b	loc_00002CC4
	TST.w	D3
	BMI.b	loc_00002C98
	LSL.w	#1, D0
	MOVE.b	D0, (A0)+
	LSL.w	#1, D1
	MOVE.b	D1, (A0)+
	MOVE.w	D2, (A0)+
	CLR.w	(A0)+
	MOVE.b	#1, (A0)
loc_00002C98:
	MOVE.w	D3, D0
	MOVEM.l	(A7)+, D3/A0
	RTS
	dc.b	$48, $E7, $10, $80, $61, $1E, $4A, $43, $6B, $12, $E3, $48, $10, $C0, $E3, $49, $10, $C1, $30, $C2, $30, $FC, $01, $00, $10, $BC, $00, $FF, $30, $03, $4C, $DF ;0x0 (0x00002CA0-0x00002CC4, Entry count: 0x24) [Unknown data]
	dc.b	$01, $08, $4E, $75 ;0x20
loc_00002CC4:
	LEA	$00FF2B38, A0
	MOVEQ	#3, D3
loc_00002CCC:
	CMPI.b	#$FF, (A0)
	BEQ.b	loc_00002CD8
	SUBQ.w	#8, A0	;Predicted (Code-scan)
	DBF	D3, loc_00002CCC	;Predicted (Code-scan)
loc_00002CD8:
	RTS
	dc.b	$48, $E7, $40, $86, $41, $F9, $00, $FF, $2B, $20, $E7, $48, $D0, $C0, $4D, $F9, $00, $FF, $00, $1A, $4B, $F9, $00, $FF, $00, $9A, $42, $40, $10, $10, $42, $41 ;0x0 (0x00002CDA-0x00002D4A, Entry count: 0x70) [Unknown data]
	dc.b	$12, $28, $00, $01, $3D, $B5, $00, $00, $00, $00, $B2, $40, $67, $04, $54, $40, $60, $F2, $30, $BC, $FF, $FF, $4C, $DF, $61, $02, $4E, $75, $48, $E7, $40, $86 ;0x20
	dc.b	$41, $F9, $00, $FF, $2B, $20, $E7, $48, $D0, $C0, $30, $BC, $FF, $FF, $4C, $DF, $61, $02, $4E, $75, $48, $E7, $80, $80, $41, $F9, $00, $FF, $2B, $20, $70, $03 ;0x40
	dc.b	$30, $BC, $FF, $FF, $50, $88, $51, $C8, $FF, $F8, $4C, $DF, $01, $01, $4E, $75 ;0x60
loc_00002D4A:
	dc.b	$00, $00, $2D, $54 ;0x0 (0x00002D4A-0x00002D4E, Entry count: 0x4) [Unknown data]
	dc.l	$00002D52
	dc.b	$4E, $75 ;0x0 (0x00002D52-0x00002D54, Entry count: 0x2) [Unknown data]
	LEA	$00FF2B40, A0
	MOVEQ	#$0000000F, D0
loc_00002D5C:
	CLR.l	(A0)+
	DBF	D0, loc_00002D5C
loc_00002D62:
	TRAP	#5
	ORI.b	#$F9, D1	;Predicted (Code-scan)
	dc.b	$00, $FF, $2B, $40 ;0x0 (0x00002D68-0x00002D6C, Entry count: 0x4) [Unknown data]
	MOVEQ	#3, D7
loc_00002D6E:
	TST.w	(A0)
	BEQ.w	loc_00002DBE
	SUBQ.w	#1, $2(A0)
	BNE.w	loc_00002DBE
	MOVEA.l	$C(A0), A1
	MOVE.w	(A1)+, D0
	BNE.b	loc_00002D90
	MOVEA.l	$8(A0), A1	;Predicted (Code-scan)
	MOVE.w	(A1)+, D0	;Predicted (Code-scan)
	LSL.w	#1, D0	;Predicted (Code-scan)
	ADDA.w	D0, A1	;Predicted (Code-scan)
	MOVE.w	(A1)+, D0	;Predicted (Code-scan)
loc_00002D90:
	MOVE.w	D0, $2(A0)
	MOVEA.l	$8(A0), A2
	MOVE.w	(A2)+, D0
	SUBQ.w	#1, D0
loc_00002D9C:
	LEA	$00FF001A, A3
	ADDA.w	$4(A0), A3
	MOVE.w	(A2)+, D1
	LSL.w	#1, D1
	ADDA.w	D1, A3
	MOVE.w	(A1)+, (A3)
	DBF	D0, loc_00002D9C
	MOVE.l	A1, $C(A0)
	BSET.b	#0, $00FF0018
loc_00002DBE:
	ADDA.w	#$0010, A0
	DBF	D7, loc_00002D6E
	BRA.b	loc_00002D62
loc_00002DC8:
	MOVEM.l	A1/D1, -(A7)
	MOVE.w	D0, D1
	LEA	$00FF2B70, A1
	MOVEQ	#3, D0
loc_00002DD6:
	TST.w	(A1)
	BEQ.b	loc_00002DE8
	SUBA.w	#$0010, A1	;Predicted (Code-scan)
	DBF	D0, loc_00002DD6	;Predicted (Code-scan)
	MOVEM.l	(A7)+, D1/A1	;Predicted (Code-scan)
	RTS	;Predicted (Code-scan)
loc_00002DE8:
	LSL.w	#5, D1
	MOVE.w	D1, $4(A1)
	MOVE.l	A0, $8(A1)
	MOVE.w	(A0)+, D1
	MOVE.w	D1, (A1)
	LSL.w	#1, D1
	ADDA.w	D1, A0
	MOVE.l	A0, $C(A1)
	MOVE.w	#1, $2(A1)
	MOVEM.l	(A7)+, D1/A1
	RTS
	dc.b	$2F, $08, $41, $F9, $00, $FF, $2B, $40, $E9, $48, $D0, $C0, $42, $50, $20, $5F, $4E, $75 ;0x0 (0x00002E0A-0x00002E1C, Entry count: 0x12) [Unknown data]
loc_00002E1C:
	MOVEM.l	A0/D0, -(A7)	;Predicted (Code-scan)
	LEA	$00FF2B40, A0	;Predicted (Code-scan)
	MOVEQ	#$0000000F, D0	;Predicted (Code-scan)
loc_00002E28:
	CLR.l	(A0)+	;Predicted (Code-scan)
	DBF	D0, loc_00002E28	;Predicted (Code-scan)
	MOVEM.l	(A7)+, D0/A0	;Predicted (Code-scan)
	RTS	;Predicted (Code-scan)
	dc.b	$00, $00, $2E, $42, $00, $00, $2E, $3C, $61, $00, $F0, $22, $4E, $75, $4D, $F9, $00, $06, $05, $80, $2A, $7C, $00, $00, $B6, $00, $61, $00, $F5, $34, $61, $00 ;0x0 (0x00002E34-0x000037F6, Entry count: 0x9C2) [Unknown data]
	dc.b	$01, $76, $41, $F9, $00, $FF, $30, $36, $70, $07, $42, $50, $D0, $FC, $00, $0C, $51, $C8, $FF, $F8, $41, $F9, $00, $FF, $2B, $80, $23, $C8, $00, $FF, $30, $30 ;0x20
	dc.b	$4E, $45, $00, $01, $4D, $F9, $00, $FF, $30, $36, $7E, $07, $4A, $56, $67, $00, $00, $E2, $10, $2E, $00, $06, $67, $00, $00, $DA, $53, $00, $67, $00, $00, $4E ;0x40
	dc.b	$53, $00, $67, $00, $00, $7E, $61, $00, $00, $D6, $18, $2E, $00, $07, $08, $04, $00, $07, $67, $0E, $20, $6E, $00, $08, $61, $00, $02, $98, $42, $56, $60, $00 ;0x60
	dc.b	$00, $B2, $61, $00, $02, $B0, $53, $42, $53, $43, $42, $41, $48, $E7, $A0, $00, $61, $00, $EE, $D0, $54, $40, $51, $CA, $FF, $F8, $4C, $DF, $00, $05, $06, $40 ;0x80
	dc.b	$00, $80, $51, $CB, $FF, $E8, $42, $56, $60, $00, $00, $88, $61, $00, $00, $90, $18, $2E, $00, $07, $08, $04, $00, $07, $67, $08, $61, $00, $02, $26, $2D, $48 ;0xA0
	dc.b	$00, $08, $08, $04, $00, $06, $67, $10, $02, $44, $00, $03, $61, $00, $00, $EA, $42, $2E, $00, $06, $60, $00, $00, $5C, $1D, $7C, $00, $02, $00, $06, $42, $6E ;0xC0
	dc.b	$00, $04, $61, $00, $00, $5A, $42, $45, $42, $46, $1A, $2E, $00, $04, $1C, $2E, $00, $05, $54, $45, $B4, $45, $64, $02, $3A, $02, $54, $46, $B6, $46, $64, $02 ;0xE0
	dc.b	$3C, $03, $1D, $45, $00, $04, $1D, $46, $00, $05, $BA, $42, $66, $08, $BC, $43, $66, $04, $42, $2E, $00, $06, $94, $45, $E2, $4A, $D0, $42, $96, $46, $E2, $4B ;0x100
	dc.b	$D2, $43, $34, $05, $36, $06, $18, $2E, $00, $07, $02, $44, $00, $03, $61, $00, $00, $88, $DC, $FC, $00, $0C, $51, $CF, $FF, $14, $60, $00, $FF, $04, $42, $40 ;0x120
	dc.b	$42, $41, $42, $42, $42, $43, $10, $2E, $00, $02, $12, $2E, $00, $03, $14, $16, $16, $2E, $00, $01, $4E, $75, $0E, $E0, $00, $2C, $00, $0E, $0E, $EE, $04, $00 ;0x140
	dc.b	$0E, $E0, $00, $2C, $0E, $EE, $04, $00, $00, $EE, $0E, $E0, $00, $2C, $00, $EE, $04, $00, $0E, $EE, $48, $E7, $C0, $80, $41, $FA, $FF, $DC, $70, $05, $72, $56 ;0x160
	dc.b	$61, $00, $EF, $A2, $41, $FA, $FF, $E4, $70, $05, $72, $76, $61, $00, $EF, $96, $4C, $DF, $01, $03, $4E, $75, $48, $E7, $C0, $80, $41, $FA, $FF, $C0, $70, $02 ;0x180
	dc.b	$72, $5C, $61, $00, $EF, $80, $41, $FA, $FF, $C8, $70, $02, $72, $7C, $61, $00, $EF, $74, $4C, $DF, $01, $03, $4E, $75, $48, $E7, $FC, $00, $61, $00, $01, $76 ;0x1A0
	dc.b	$E1, $4C, $EB, $4C, $57, $42, $57, $43, $48, $A7, $E0, $00, $42, $45, $61, $00, $00, $86, $54, $40, $4A, $42, $6B, $10, $32, $3C, $85, $B2, $82, $44, $61, $00 ;0x1C0
	dc.b	$ED, $82, $54, $40, $51, $CA, $FF, $F8, $7A, $01, $61, $6A, $4C, $9F, $00, $07, $06, $40, $00, $80, $4A, $43, $6B, $3A, $48, $A7, $A0, $00, $32, $3C, $85, $B3 ;0x1E0
	dc.b	$82, $44, $61, $00, $ED, $5E, $54, $40, $4A, $42, $6B, $10, $32, $3C, $85, $B0, $82, $44, $61, $00, $ED, $4E, $54, $40, $51, $CA, $FF, $F8, $32, $3C, $8D, $B3 ;0x200
	dc.b	$82, $44, $61, $00, $ED, $3E, $4C, $9F, $00, $05, $06, $40, $00, $80, $51, $CB, $FF, $C8, $7A, $02, $61, $20, $54, $40, $4A, $42, $6B, $10, $32, $3C, $95, $B2 ;0x220
	dc.b	$82, $44, $61, $00, $ED, $1E, $54, $40, $51, $CA, $FF, $F8, $7A, $03, $61, $06, $4C, $DF, $00, $3F, $4E, $75, $48, $E7, $FE, $80, $61, $00, $ED, $34, $4A, $41 ;0x240
	dc.b	$67, $34, $41, $FA, $00, $4E, $36, $05, $E5, $4B, $3C, $01, $02, $46, $18, $00, $E0, $4E, $E6, $4E, $D6, $46, $42, $46, $1C, $30, $30, $00, $E7, $4E, $02, $41 ;0x260
	dc.b	$07, $FF, $04, $41, $05, $B0, $6B, $0E, $0C, $41, $00, $06, $64, $08, $DC, $41, $16, $30, $60, $10, $60, $04, $16, $3C, $00, $01, $32, $05, $E1, $49, $E7, $49 ;0x280
	dc.b	$06, $41, $85, $B0, $D2, $03, $82, $44, $61, $00, $EC, $B8, $4C, $DF, $01, $7F, $4E, $75, $00, $01, $02, $03, $01, $00, $03, $02, $02, $03, $00, $01, $03, $02 ;0x2A0
	dc.b	$01, $00, $04, $01, $05, $05, $04, $05, $00, $00, $04, $05, $05, $04, $05, $05, $00, $00, $04, $05, $04, $05, $05, $05, $00, $00, $04, $04, $04, $04, $04, $04 ;0x2C0
	dc.b	$00, $00, $48, $E7, $F0, $00, $20, $79, $00, $FF, $30, $30, $2F, $08, $61, $44, $53, $43, $3F, $00, $32, $02, $61, $00, $EC, $2E, $30, $1F, $06, $40, $00, $80 ;0x2E0
	dc.b	$51, $CB, $FF, $F0, $23, $C8, $00, $FF, $30, $30, $20, $5F, $4C, $DF, $00, $0F, $4E, $75, $48, $E7, $F7, $86, $61, $1C, $3A, $00, $3E, $02, $53, $47, $3C, $03 ;0x300
	dc.b	$53, $46, $2C, $48, $23, $C8, $00, $FF, $30, $30, $61, $00, $EB, $5A, $4C, $DF, $61, $EF, $4E, $75, $EF, $49, $E3, $48, $D0, $41, $06, $40, $C0, $00, $4E, $75 ;0x320
	dc.b	$48, $E7, $02, $80, $41, $F9, $00, $FF, $30, $8A, $7C, $07, $4A, $50, $67, $10, $90, $FC, $00, $0C, $51, $CE, $FF, $F6, $30, $06, $4C, $DF, $01, $40, $60, $FE ;0x340
	dc.b	$11, $40, $00, $02, $11, $41, $00, $03, $10, $82, $11, $43, $00, $01, $11, $44, $00, $07, $11, $7C, $00, $01, $00, $06, $30, $06, $4C, $DF, $01, $40, $4E, $75 ;0x360
	dc.b	$2F, $08, $C0, $FC, $00, $0C, $41, $F9, $00, $FF, $30, $36, $D0, $C0, $11, $7C, $00, $03, $00, $06, $20, $5F, $4E, $75, $48, $E7, $F8, $02, $C0, $FC, $00, $0C ;0x380
	dc.b	$4D, $F9, $00, $FF, $30, $36, $DD, $C0, $61, $00, $FD, $94, $18, $2E, $00, $07, $02, $44, $00, $03, $61, $00, $FE, $02, $4C, $DF, $40, $1F, $4E, $75, $48, $E7 ;0x3A0
	dc.b	$FC, $02, $C0, $FC, $00, $0C, $4D, $F9, $00, $FF, $30, $36, $DD, $C0, $61, $00, $FD, $6E, $02, $04, $00, $03, $1A, $2E, $00, $07, $02, $05, $00, $FC, $8A, $04 ;0x3C0
	dc.b	$1D, $45, $00, $07, $61, $00, $FF, $4E, $02, $45, $00, $03, $E1, $4D, $EB, $4D, $53, $42, $53, $43, $48, $E7, $A0, $00, $61, $00, $EB, $96, $02, $41, $9F, $FF ;0x3E0
	dc.b	$82, $45, $61, $00, $EB, $5E, $54, $40, $51, $CA, $FF, $EE, $4C, $DF, $00, $05, $06, $40, $00, $80, $51, $CB, $FF, $DE, $4C, $DF, $40, $3F, $4E, $75, $48, $E7 ;0x400
	dc.b	$FC, $00, $61, $00, $FF, $10, $C8, $FC, $00, $05, $53, $42, $53, $43, $48, $E7, $A0, $00, $61, $00, $EB, $5C, $3A, $01, $02, $45, $07, $F0, $0C, $45, $05, $B0 ;0x420
	dc.b	$66, $24, $3A, $01, $02, $45, $00, $0F, $67, $1C, $0C, $45, $00, $06, $65, $0A, $5B, $45, $0C, $45, $00, $06, $65, $02, $5B, $45, $DA, $44, $02, $41, $FF, $F0 ;0x440
	dc.b	$D2, $45, $61, $00, $EA, $FE, $54, $40, $51, $CA, $FF, $C8, $4C, $DF, $00, $05, $06, $40, $00, $80, $51, $CB, $FF, $B8, $4C, $DF, $00, $3F, $4E, $75, $2F, $0E ;0x460
	dc.b	$C0, $FC, $00, $0C, $4D, $F9, $00, $FF, $30, $36, $DD, $C0, $42, $40, $4A, $56, $67, $00, $00, $0A, $10, $2E, $00, $06, $2C, $5F, $4E, $75, $70, $FF, $2C, $5F ;0x480
	dc.b	$4E, $75, $2F, $04, $61, $00, $FE, $9A, $38, $00, $4E, $45, $00, $01, $30, $04, $61, $CC, $4A, $40, $66, $F4, $30, $04, $28, $1F, $4E, $75, $48, $E7, $FE, $80 ;0x4A0
	dc.b	$2F, $00, $30, $3C, $00, $20, $61, $00, $08, $28, $20, $1F, $42, $68, $00, $10, $31, $7C, $FF, $FF, $00, $12, $60, $34, $48, $E7, $FE, $80, $2F, $00, $30, $3C ;0x4C0
	dc.b	$00, $20, $61, $00, $08, $0C, $20, $1F, $31, $7C, $FF, $FF, $00, $10, $42, $68, $00, $12, $60, $18, $48, $E7, $FE, $80, $2F, $00, $30, $3C, $00, $20, $61, $00 ;0x4E0
	dc.b	$07, $F0, $20, $1F, $42, $68, $00, $10, $42, $68, $00, $12, $BC, $47, $64, $02, $3E, $06, $30, $87, $4A, $46, $6B, $00, $01, $98, $31, $40, $00, $02, $31, $41 ;0x500
	dc.b	$00, $04, $31, $42, $00, $06, $31, $43, $00, $08, $31, $46, $00, $0A, $3C, $04, $3E, $05, $34, $10, $3A, $02, $8A, $C6, $28, $05, $48, $44, $31, $46, $00, $0C ;0x520
	dc.b	$31, $47, $00, $0E, $42, $46, $30, $06, $02, $40, $00, $07, $66, $16, $08, $06, $00, $03, $66, $0A, $7E, $02, $61, $00, $01, $12, $60, $00, $00, $08, $7E, $03 ;0x540
	dc.b	$61, $00, $01, $08, $4E, $45, $00, $01, $10, $39, $00, $FF, $27, $DA, $08, $00, $00, $06, $66, $00, $01, $2E, $08, $00, $00, $05, $66, $00, $01, $26, $08, $00 ;0x560
	dc.b	$00, $04, $66, $00, $01, $50, $10, $39, $00, $FF, $27, $DC, $08, $00, $00, $00, $66, $16, $08, $00, $00, $01, $66, $2A, $08, $00, $00, $02, $66, $50, $08, $00 ;0x580
	dc.b	$00, $03, $66, $7E, $52, $46, $60, $9E, $4A, $45, $67, $F8, $7E, $03, $61, $00, $00, $BA, $53, $45, $94, $68, $00, $0C, $42, $46, $70, $67, $61, $00, $EF, $84 ;0x5A0
	dc.b	$60, $84, $36, $28, $00, $0E, $53, $43, $BA, $43, $64, $D8, $36, $28, $00, $0C, $D6, $42, $B6, $68, $00, $0A, $62, $CC, $34, $03, $7E, $03, $61, $00, $00, $8C ;0x5C0
	dc.b	$52, $45, $42, $46, $70, $67, $61, $00, $EF, $5A, $60, $00, $FF, $5A, $4A, $44, $67, $00, $00, $16, $7E, $03, $61, $72, $53, $44, $53, $42, $42, $46, $70, $67 ;0x5E0
	dc.b	$61, $00, $EF, $40, $60, $00, $FF, $40, $4A, $68, $00, $10, $67, $96, $7E, $03, $61, $58, $70, $67, $61, $00, $EF, $2C, $00, $42, $80, $00, $30, $82, $60, $00 ;0x600
	dc.b	$00, $CA, $36, $28, $00, $0C, $53, $43, $B8, $43, $64, $00, $00, $22, $36, $02, $52, $43, $B6, $68, $00, $0A, $62, $00, $00, $16, $34, $03, $7E, $03, $61, $2A ;0x620
	dc.b	$52, $44, $42, $46, $70, $67, $61, $00, $EE, $FA, $60, $00, $FE, $FA, $4A, $68, $00, $10, $67, $00, $FF, $50, $7E, $03, $61, $10, $70, $67, $61, $00, $EE, $E4 ;0x640
	dc.b	$00, $42, $C0, $00, $30, $82, $60, $00, $00, $82, $48, $E7, $28, $00, $30, $28, $00, $06, $54, $40, $C0, $C4, $D0, $68, $00, $02, $32, $28, $00, $08, $52, $41 ;0x660
	dc.b	$0C, $41, $00, $01, $66, $02, $4E, $71, $C2, $C5, $D2, $68, $00, $04, $34, $28, $00, $06, $36, $28, $00, $08, $28, $07, $61, $00, $E9, $4C, $4C, $DF, $00, $14 ;0x680
	dc.b	$4E, $75, $7E, $02, $61, $C4, $30, $82, $70, $66, $61, $00, $EE, $96, $60, $3A, $4E, $45, $00, $01, $10, $39, $00, $FF, $27, $DA, $08, $00, $00, $06, $66, $00 ;0x6A0
	dc.b	$00, $20, $08, $00, $00, $05, $66, $00, $00, $18, $08, $00, $00, $04, $66, $00, $00, $10, $60, $DC, $4A, $68, $00, $12, $6B, $00, $FE, $CA, $7E, $03, $61, $8A ;0x6C0
	dc.b	$7A, $FF, $30, $85, $70, $68, $61, $00, $EE, $5A, $3E, $10, $61, $00, $06, $76, $4C, $DF, $01, $7F, $4E, $75, $48, $E7, $40, $80, $42, $40, $12, $18, $67, $16 ;0x6E0
	dc.b	$0C, $01, $00, $0A, $65, $F6, $0C, $01, $00, $7B, $67, $F0, $0C, $01, $00, $7C, $67, $EA, $52, $40, $60, $E6, $4C, $DF, $01, $02, $4E, $75, $48, $E7, $C0, $E0 ;0x700
	dc.b	$45, $FA, $00, $92, $42, $40, $10, $18, $66, $0A, $12, $BC, $00, $00, $4C, $DF, $07, $03, $4E, $75, $12, $C0, $60, $00, $FF, $EC, $41, $F9, $00, $02, $16, $62 ;0x720
	dc.b	$4E, $75, $41, $F9, $00, $02, $16, $6A, $4E, $75, $41, $F9, $00, $02, $16, $72, $4E, $75, $41, $F9, $00, $02, $16, $7E, $4E, $75, $41, $F9, $00, $02, $16, $8A ;0x740
	dc.b	$4E, $75, $43, $F9, $00, $02, $16, $8E, $4E, $75, $41, $F9, $00, $02, $17, $8A, $4E, $75, $41, $F9, $00, $02, $17, $CA, $4E, $75, $41, $F9, $00, $02, $18, $2E ;0x760
	dc.b	$4E, $75, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $06, $41, $00, $50, $10, $10, $0C, $00, $00, $7B, $67, $0A ;0x780
	dc.b	$0C, $00, $00, $7C, $66, $08, $54, $41, $60, $02, $52, $41, $52, $88, $12, $C1, $60, $00, $FF, $72, $21, $23, $25, $27, $29, $2A, $2C, $2E, $30, $32, $34, $36 ;0x7A0
	dc.b	$38, $3A, $3C, $3E, $40, $43, $45, $47, $49, $4A, $4B, $4C, $4D, $4E, $51, $54, $57, $5A, $5D, $5E, $5F, $60, $61, $63, $65, $67, $68, $69, $6A, $6B, $6C, $6D ;0x7C0
	dc.b	$6E, $6F, $20, $22, $24, $26, $28, $42, $62, $64, $66, $1B, $1A, $4C, $4D, $0F, $0F, $0F, $0F, $0F, $48, $E7, $F0, $C0, $22, $48, $30, $7C, $C0, $00, $36, $00 ;0x7E0
	dc.b	$42, $42, $14, $19, $67, $42, $0C, $02, $00, $7B, $67, $12, $0C, $02, $00, $7C, $67, $0C, $0C, $02, $00, $0D, $66, $18, $52, $41, $30, $03, $60, $E2, $53, $40 ;0x800
	dc.b	$53, $41, $06, $42, $E4, $F0, $61, $00, $E7, $92, $52, $40, $52, $41, $60, $D0, $06, $42, $E4, $F0, $61, $00, $E7, $84, $52, $40, $60, $C4, $4E, $71, $4E, $71 ;0x820
	dc.b	$4E, $71, $4E, $71, $4E, $71, $4E, $71, $4C, $DF, $03, $0F, $4E, $75, $48, $E7, $F0, $C0, $22, $48, $30, $7C, $C0, $00, $36, $00, $42, $42, $14, $19, $67, $24 ;0x840
	dc.b	$0C, $02, $00, $7B, $67, $F4, $0C, $02, $00, $7C, $67, $EE, $0C, $02, $00, $0D, $66, $06, $54, $41, $30, $03, $60, $E2, $06, $42, $E4, $F0, $61, $00, $E7, $3C ;0x860
	dc.b	$52, $40, $60, $D6, $4C, $DF, $03, $0F, $4E, $75, $48, $E7, $00, $A0, $48, $E7, $80, $80, $30, $3C, $00, $10, $61, $00, $04, $58, $24, $48, $4C, $DF, $01, $01 ;0x880
	dc.b	$2F, $09, $22, $4A, $61, $00, $FE, $76, $20, $49, $22, $5F, $61, $10, $2F, $08, $20, $4A, $61, $00, $04, $B0, $20, $5F, $4C, $DF, $05, $00, $4E, $75, $48, $E7 ;0x8A0
	dc.b	$FF, $80, $3C, $00, $38, $00, $3E, $01, $42, $40, $10, $18, $67, $2C, $0C, $00, $00, $0D, $66, $06, $3C, $04, $54, $47, $60, $EE, $0C, $00, $00, $0E, $66, $04 ;0x8C0
	dc.b	$52, $46, $60, $E4, $0C, $00, $00, $03, $64, $04, $E1, $48, $10, $18, $61, $00, $E8, $C4, $4E, $71, $D2, $FC, $00, $40, $60, $CE, $4C, $DF, $01, $FF, $4E, $75 ;0x8E0
	dc.b	$48, $E7, $08, $C0, $2F, $00, $30, $3C, $00, $10, $61, $00, $03, $E4, $20, $1F, $78, $3F, $61, $56, $61, $00, $FF, $38, $61, $00, $04, $4A, $4C, $DF, $03, $10 ;0x900
	dc.b	$4E, $75, $48, $E7, $08, $C0, $2F, $00, $30, $3C, $00, $10, $61, $00, $03, $C2, $20, $1F, $78, $10, $61, $34, $61, $00, $FF, $16, $61, $00, $04, $28, $4C, $DF ;0x920
	dc.b	$03, $10, $4E, $75, $48, $E7, $08, $80, $2F, $00, $30, $3C, $00, $10, $61, $00, $03, $A0, $20, $1F, $2F, $09, $78, $0F, $61, $10, $22, $5F, $61, $00, $FF, $60 ;0x940
	dc.b	$61, $00, $04, $02, $4C, $DF, $01, $10, $4E, $75, $48, $E7, $FC, $00, $1A, $04, $22, $48, $30, $03, $66, $02, $76, $06, $0C, $43, $00, $07, $65, $02, $76, $06 ;0x960
	dc.b	$78, $01, $53, $43, $67, $06, $C8, $FC, $00, $0A, $60, $F6, $26, $04, $28, $02, $42, $41, $74, $10, $98, $83, $6B, $06, $52, $42, $72, $01, $60, $F6, $D8, $83 ;0x980
	dc.b	$4A, $41, $66, $0C, $0C, $43, $00, $01, $67, $06, $4A, $40, $67, $04, $14, $05, $12, $C2, $86, $FC, $00, $0A, $66, $DA, $12, $BC, $00, $00, $4C, $DF, $00, $3F ;0x9A0
	dc.b	$4E, $75 ;0x9C0
loc_000037F6:
	MOVE.w	#$FFFF, $00FF3096
	RTS
	dc.b	$4A, $79, $00, $FF, $30, $96, $6A, $24, $48, $E7, $F8, $00, $70, $01, $72, $14, $74, $26, $36, $3C, $00, $07, $38, $3C, $00, $C3, $61, $00, $F9, $58, $33, $C0 ;0x0 (0x00003800-0x00003B0A, Entry count: 0x30A) [Unknown data]
	dc.b	$00, $FF, $30, $96, $4E, $45, $00, $01, $4C, $DF, $00, $1F, $4E, $75, $48, $E7, $80, $00, $30, $39, $00, $FF, $30, $96, $6B, $0C, $61, $00, $F9, $78, $33, $FC ;0x20
	dc.b	$FF, $FF, $00, $FF, $30, $96, $4C, $DF, $00, $01, $4E, $45, $00, $01, $4E, $75, $48, $E7, $FF, $FE, $3A, $00, $4D, $F9, $00, $FF, $30, $98, $48, $E7, $80, $80 ;0x40
	dc.b	$30, $3C, $00, $A0, $61, $00, $02, $BE, $2A, $48, $4C, $DF, $01, $01, $30, $39, $00, $FF, $30, $96, $6B, $00, $01, $7C, $61, $00, $F9, $52, $78, $04, $08, $05 ;0x60
	dc.b	$00, $01, $67, $02, $42, $44, $34, $7C, $F0, $00, $7E, $15, $3B, $7C, $00, $02, $00, $9E, $22, $4D, $72, $01, $61, $00, $01, $D2, $7C, $03, $26, $4D, $4A, $13 ;0x80
	dc.b	$67, $66, $0C, $46, $00, $25, $64, $00, $00, $94, $42, $40, $10, $1B, $0C, $00, $00, $03, $64, $04, $E1, $48, $10, $1B, $22, $4A, $61, $00, $E7, $2C, $D4, $FC ;0xA0
	dc.b	$00, $40, $B4, $FC, $B4, $C0, $66, $06, $34, $7C, $F0, $00, $60, $0A, $B4, $FC, $FF, $C0, $66, $04, $34, $7C, $AE, $00, $30, $04, $4E, $71, $4E, $45, $00, $01 ;0xC0
	dc.b	$08, $39, $00, $06, $00, $FF, $27, $DA, $66, $14, $08, $39, $00, $04, $00, $FF, $27, $DA, $66, $0A, $08, $39, $00, $05, $00, $FF, $27, $DA, $67, $04, $42, $40 ;0xE0
	dc.b	$42, $44, $51, $C8, $FF, $D8, $60, $96, $10, $10, $67, $50, $0C, $00, $00, $0C, $66, $06, $61, $00, $01, $46, $60, $50, $53, $6D, $00, $9E, $54, $47, $0C, $47 ;0x100
	dc.b	$00, $19, $67, $06, $52, $88, $60, $00, $FF, $6A, $4A, $6D, $00, $9E, $67, $38, $61, $00, $00, $D0, $7E, $17, $52, $88, $60, $00, $FF, $58, $7C, $03, $53, $6D ;0x120
	dc.b	$00, $9E, $54, $47, $0C, $47, $00, $19, $66, $00, $FF, $54, $4A, $6D, $00, $9E, $67, $16, $61, $00, $00, $AE, $7E, $17, $60, $00, $FF, $44, $61, $00, $00, $FC ;0x140
	dc.b	$08, $05, $00, $00, $66, $00, $00, $8C, $2F, $08, $42, $43, $70, $24, $72, $19, $30, $7C, $C0, $00, $08, $05, $00, $02, $67, $06, $0C, $43, $00, $32, $64, $36 ;0x160
	dc.b	$34, $3C, $E5, $2F, $08, $03, $00, $04, $66, $04, $34, $3C, $E5, $6E, $61, $00, $E4, $5E, $4E, $45, $00, $01, $52, $43, $08, $39, $00, $06, $00, $FF, $27, $DA ;0x180
	dc.b	$66, $14, $08, $39, $00, $04, $00, $FF, $27, $DA, $66, $0A, $08, $39, $00, $05, $00, $FF, $27, $DA, $67, $BE, $70, $24, $72, $19, $30, $7C, $C0, $00, $34, $3C ;0x1A0
	dc.b	$E5, $2F, $61, $00, $E4, $2A, $20, $5F, $4A, $13, $66, $0E, $14, $10, $67, $22, $52, $88, $0C, $02, $00, $0C, $67, $00, $FE, $96, $3B, $7C, $00, $02, $00, $9E ;0x1C0
	dc.b	$61, $20, $38, $3C, $00, $06, $7E, $17, $4A, $13, $66, $00, $FE, $B2, $60, $00, $FE, $A2, $2F, $08, $20, $4D, $61, $00, $01, $A0, $20, $5F, $4C, $DF, $7F, $FF ;0x1E0
	dc.b	$4E, $75, $74, $01, $48, $E7, $FF, $8A, $48, $E7, $80, $80, $30, $3C, $00, $50, $61, $00, $01, $12, $28, $48, $4C, $DF, $01, $01, $42, $80, $30, $3C, $CB, $06 ;0x200
	dc.b	$72, $22, $74, $03, $20, $4C, $61, $00, $E3, $32, $2A, $00, $04, $45, $00, $80, $7E, $21, $42, $46, $2C, $4C, $61, $00, $E2, $82, $06, $40, $00, $80, $51, $CA ;0x220
	dc.b	$FF, $E4, $2F, $08, $20, $4C, $61, $00, $01, $50, $20, $5F, $4C, $DF, $51, $FF, $4E, $45, $00, $04, $51, $CA, $FF, $AE, $4E, $75, $0C, $6D, $00, $02, $00, $9E ;0x240
	dc.b	$65, $08, $0C, $47, $00, $15, $67, $02, $61, $98, $48, $E7, $F8, $60, $24, $48, $42, $42, $14, $1A, $67, $00, $00, $88, $0C, $02, $00, $03, $64, $06, $12, $C2 ;0x260
	dc.b	$12, $DA, $60, $EC, $66, $16, $20, $5E, $16, $18, $67, $0E, $0C, $03, $00, $03, $64, $04, $12, $C3, $16, $18, $12, $C3, $60, $EE, $60, $D4, $0C, $02, $00, $04 ;0x280
	dc.b	$66, $10, $24, $1E, $42, $43, $16, $1A, $20, $49, $78, $0F, $61, $00, $FC, $F0, $60, $BE, $0C, $02, $00, $05, $66, $14, $14, $1A, $61, $00, $67, $20, $61, $00 ;0x2A0
	dc.b	$FA, $90, $4A, $11, $67, $04, $52, $89, $60, $F8, $60, $A4, $0C, $02, $00, $06, $66, $10, $20, $5E, $61, $00, $FA, $7A, $4A, $11, $67, $04, $52, $89, $60, $F8 ;0x2C0
	dc.b	$60, $8E, $0C, $02, $00, $0F, $64, $10, $0C, $02, $00, $0D, $67, $06, $0C, $02, $00, $0C, $66, $FE, $4A, $41, $66, $06, $12, $C2, $60, $00, $FF, $74, $42, $11 ;0x2E0
	dc.b	$20, $4A, $53, $88, $4C, $DF, $06, $1F, $4E, $75 ;0x300
loc_00003B0A:
	MOVEM.l	A0/D0, -(A7)
	MOVE.w	#$01FF, D0
	LEA	$00FF30B8, A0
loc_00003B18:
	CLR.b	(A0)+
	DBF	D0, loc_00003B18
	MOVEM.l	(A7)+, D0/A0
	RTS
loc_00003B24:
	MOVEM.l	A3/A2/A1/D2/D1/D0, -(A7)
	LEA	$00FF32B8, A0
	LEA	$00FF30B8, A1
	MOVE.w	#$01FF, D1
	ADDI.w	#$000F, D0
	LSR.w	#4, D0
loc_00003B3E:
	TST.b	(A1)
	BEQ.b	loc_00003B50
loc_00003B42:
	ADDQ.l	#1, A1
	ADDA.w	#$0010, A0
	DBF	D1, loc_00003B3E
	BRA.w	loc_00003B96	;Predicted (Code-scan)
loc_00003B50:
	MOVEA.l	A0, A2
	MOVEA.l	A1, A3
	MOVE.w	D0, D2
loc_00003B56:
	TST.b	(A1)
	BNE.b	loc_00003B42
	SUBQ.w	#1, D2
	BEQ.b	loc_00003B6C
	ADDQ.l	#1, A1
	ADDA.w	#$0010, A0
	DBF	D1, loc_00003B56
	BRA.w	loc_00003B96	;Predicted (Code-scan)
loc_00003B6C:
	MOVEQ	#1, D2
loc_00003B6E:
	LEA	$00FF30B8, A1
	MOVE.w	#$01FF, D1
loc_00003B78:
	CMP.b	(A1)+, D2
	BEQ.b	loc_00003B82
	DBF	D1, loc_00003B78
	BRA.b	loc_00003B86
loc_00003B82:
	ADDQ.b	#1, D2
	BRA.b	loc_00003B6E
loc_00003B86:
	SUBQ.w	#1, D0
loc_00003B88:
	MOVE.b	D2, (A3)+
	DBF	D0, loc_00003B88
	MOVEA.l	A2, A0
	MOVEM.l	(A7)+, D0/D1/D2/A1/A2/A3
	RTS
loc_00003B96:
	BRA.b	loc_00003B96	;Predicted (Code-scan)
loc_00003B98:
	MOVEM.l	A0/D0, -(A7)
	SUBA.l	#$00FF32B8, A0
	MOVE.l	A0, D0
	LSR.l	#4, D0
	LEA	$00FF30B8, A0
	ADDA.l	D0, A0
	MOVE.b	(A0), D0
	BEQ.b	loc_00003BC0
loc_00003BB2:
	CMP.b	(A0), D0
	BNE.b	loc_00003BBA
	CLR.b	(A0)+
	BRA.b	loc_00003BB2
loc_00003BBA:
	MOVEM.l	(A7)+, D0/A0
	RTS
loc_00003BC0:
	BRA.b	loc_00003BC0	;Predicted (Code-scan)
	dc.b	$20, $39, $00, $FF, $CE, $D2, $02, $40, $07, $FF, $0C, $40, $01, $00, $64, $04, $70, $03, $4E, $75, $0C, $40, $04, $00, $64, $04, $42, $40, $4E, $75, $0C, $40 ;0x0 (0x00003BC2-0x00003D08, Entry count: 0x146) [Unknown data]
	dc.b	$05, $00, $64, $04, $70, $01, $4E, $75, $70, $02, $4E, $75, $48, $E7, $C0, $00, $02, $80, $00, $00, $07, $FF, $22, $39, $00, $FF, $CE, $D2, $02, $41, $07, $FF ;0x20
	dc.b	$B2, $40, $65, $14, $06, $80, $00, $00, $08, $00, $4A, $79, $00, $FF, $D6, $52, $67, $06, $53, $79, $00, $FF, $D6, $52, $22, $39, $00, $FF, $CE, $D2, $02, $81 ;0x40
	dc.b	$FF, $FF, $F8, $00, $D2, $80, $23, $C1, $00, $FF, $CE, $D2, $4C, $DF, $00, $03, $4E, $75, $48, $E7, $C0, $80, $61, $3A, $03, $D0, $4C, $DF, $01, $03, $4E, $75 ;0x60
	dc.b	$48, $E7, $C0, $80, $61, $2C, $03, $90, $4C, $DF, $01, $03, $4E, $75, $48, $E7, $40, $80, $61, $1E, $08, $01, $00, $0F, $66, $08, $03, $10, $67, $0C, $70, $01 ;0x80
	dc.b	$60, $0A, $03, $10, $66, $04, $70, $01, $60, $02, $42, $40, $4C, $DF, $01, $02, $4E, $75, $41, $F9, $00, $FF, $52, $B8, $53, $40, $32, $00, $08, $80, $00, $0F ;0xA0
	dc.b	$E6, $48, $48, $C0, $D1, $C0, $4E, $75, $48, $E7, $80, $80, $41, $F9, $00, $FF, $52, $B8, $70, $27, $42, $98, $51, $C8, $FF, $FC, $4C, $DF, $01, $01, $4E, $75 ;0xC0
	dc.b	$48, $E7, $80, $80, $53, $40, $02, $40, $00, $FF, $48, $C0, $41, $F9, $00, $FF, $53, $58, $D1, $C0, $10, $81, $4C, $DF, $01, $01, $4E, $75, $2F, $08, $53, $40 ;0xE0
	dc.b	$02, $40, $00, $FF, $48, $C0, $41, $F9, $00, $FF, $53, $58, $D1, $C0, $42, $80, $10, $10, $20, $5F, $4E, $75, $2F, $08, $53, $40, $02, $40, $00, $FF, $48, $C0 ;0x100
	dc.b	$41, $F9, $00, $FF, $53, $58, $D1, $C0, $52, $10, $20, $5F, $4E, $75, $2F, $08, $53, $40, $02, $40, $00, $FF, $48, $C0, $41, $F9, $00, $FF, $53, $58, $D1, $C0 ;0x120
	dc.b	$53, $10, $20, $5F, $4E, $75 ;0x140
	MOVEM.l	A1/A0/D2/D1, -(A7)
	CLR.w	D2
	MOVEA.l	#$00200001, A0
	MOVEP.l	$2(A0), D0
	CMPI.l	#$41425900, D0
	BEQ.b	loc_00003D40
	MOVEP.l	$2002(A0), D0
	CMPI.l	#$41425900, D0
	BEQ.b	loc_00003D40
	CLR.l	D0
	MOVE.w	#$07FF, D1
	MOVEA.l	A0, A1
loc_00003D34:
	MOVEP.l	D0, $0(A1)
	ADDQ.l	#8, A1
	DBF	D1, loc_00003D34
	MOVEQ	#-1, D2
loc_00003D40:
	MOVE.l	#$41425900, D0
	MOVEP.l	D0, $2(A0)
	MOVEP.l	D0, $2002(A0)
	MOVE.w	D2, D0
	MOVEM.l	(A7)+, D1/D2/A0/A1
	RTS
	dc.b	$23, $FC, $00, $20, $00, $0B, $00, $FF, $53, $9A, $4E, $75, $48, $E7, $C0, $C0, $53, $40, $22, $79, $00, $FF, $53, $9A, $03, $09, $00, $00, $30, $C1, $58, $89 ;0x0 (0x00003D56-0x00004000, Entry count: 0x2AA) [Unknown data]
	dc.b	$51, $C8, $FF, $F6, $23, $C9, $00, $FF, $53, $9A, $4C, $DF, $03, $03, $4E, $75, $48, $E7, $C0, $C0, $53, $40, $22, $79, $00, $FF, $53, $9A, $58, $89, $51, $C8 ;0x20
	dc.b	$FF, $FC, $23, $C9, $00, $FF, $53, $9A, $4C, $DF, $03, $03, $4E, $75, $48, $E7, $C0, $C0, $53, $40, $22, $79, $00, $FF, $53, $9A, $32, $18, $03, $89, $00, $00 ;0x40
	dc.b	$58, $89, $51, $C8, $FF, $F6, $23, $C9, $00, $FF, $53, $9A, $4C, $DF, $03, $03, $4E, $75, $48, $E7, $E0, $C0, $20, $7C, $00, $20, $00, $0B, $22, $48, $D3, $FC ;0x60
	dc.b	$00, $00, $20, $00, $42, $42, $32, $3C, $07, $FB, $01, $08, $00, $00, $01, $89, $00, $00, $D4, $40, $58, $88, $58, $89, $51, $C9, $FF, $F0, $05, $88, $00, $00 ;0x80
	dc.b	$05, $89, $00, $00, $4C, $DF, $03, $07, $4E, $75, $48, $E7, $20, $C0, $20, $7C, $00, $20, $00, $0B, $42, $42, $32, $3C, $07, $FB, $01, $08, $00, $00, $D4, $40 ;0xA0
	dc.b	$58, $88, $51, $C9, $FF, $F6, $01, $08, $00, $00, $B4, $40, $67, $5A, $20, $7C, $00, $20, $00, $0B, $22, $48, $D3, $FC, $00, $00, $20, $00, $42, $42, $32, $3C ;0xC0
	dc.b	$07, $FB, $01, $09, $00, $00, $01, $88, $00, $00, $D4, $40, $58, $88, $58, $89, $51, $C9, $FF, $F0, $01, $09, $00, $00, $01, $88, $00, $00, $B4, $40, $67, $28 ;0xE0
	dc.b	$20, $7C, $00, $20, $00, $0B, $22, $48, $D3, $FC, $00, $00, $20, $00, $42, $42, $32, $3C, $07, $FC, $05, $88, $00, $00, $05, $89, $00, $00, $58, $88, $58, $89 ;0x100
	dc.b	$51, $C9, $FF, $F2, $70, $FF, $60, $02, $42, $40, $20, $7C, $00, $20, $00, $0B, $03, $48, $00, $00, $4C, $DF, $03, $04, $4E, $75, $48, $E7, $80, $80, $61, $00 ;0x120
	dc.b	$FE, $C0, $41, $F9, $00, $00, $3E, $FE, $70, $02, $61, $00, $FF, $02, $41, $F9, $00, $FF, $CA, $6E, $70, $01, $61, $00, $FE, $F6, $41, $F9, $00, $FF, $CA, $9E ;0x140
	dc.b	$70, $03, $61, $00, $FE, $EA, $41, $F9, $00, $FF, $CA, $B2, $70, $03, $61, $00, $FE, $DE, $41, $F9, $00, $FF, $DB, $66, $70, $02, $61, $00, $FE, $D2, $41, $F9 ;0x160
	dc.b	$00, $FF, $CE, $CE, $30, $3C, $0B, $D4, $E2, $48, $61, $00, $FE, $C2, $41, $F9, $00, $FF, $52, $B8, $30, $3C, $00, $E0, $E2, $48, $61, $00, $FE, $B2, $61, $00 ;0x180
	dc.b	$FE, $D2, $4C, $DF, $01, $01, $4E, $75, $61, $62, $79, $00, $48, $E7, $80, $80, $61, $00, $FE, $4E, $70, $02, $61, $00, $FE, $78, $41, $F9, $00, $FF, $CA, $6E ;0x1A0
	dc.b	$70, $01, $61, $00, $FE, $48, $41, $F9, $00, $FF, $CA, $9E, $70, $03, $61, $00, $FE, $3C, $41, $F9, $00, $FF, $CA, $B2, $70, $03, $61, $00, $FE, $30, $41, $F9 ;0x1C0
	dc.b	$00, $FF, $DB, $66, $70, $02, $61, $00, $FE, $24, $41, $F9, $00, $FF, $CE, $CE, $30, $3C, $0B, $D4, $E2, $48, $61, $00, $FE, $14, $41, $F9, $00, $FF, $52, $B8 ;0x1E0
	dc.b	$30, $3C, $00, $E0, $E2, $48, $61, $00, $FE, $04, $4C, $DF, $01, $01, $4E, $75, $48, $E7, $F8, $40, $2F, $08, $48, $E7, $80, $80, $30, $3C, $00, $20, $61, $00 ;0x200
	dc.b	$FB, $AE, $22, $48, $4C, $DF, $01, $01, $20, $49, $70, $07, $42, $98, $51, $C8, $FF, $FC, $70, $01, $72, $01, $74, $26, $76, $1A, $38, $3C, $00, $43, $61, $00 ;0x220
	dc.b	$F3, $40, $33, $40, $00, $1E, $70, $1D, $72, $16, $74, $08, $76, $04, $78, $03, $61, $00, $F0, $44, $70, $04, $72, $03, $61, $00, $F5, $EE, $61, $00, $F6, $74 ;0x240
	dc.b	$4E, $71, $4E, $71, $4E, $71, $4E, $71, $4E, $71, $4E, $71, $70, $1C, $72, $03, $61, $00, $F5, $DE, $61, $00, $F6, $5C, $4E, $71, $4E, $71, $4E, $71, $4E, $71 ;0x260
	dc.b	$4E, $71, $4E, $71, $4E, $71, $4E, $71, $4E, $71, $4E, $71, $4E, $71, $4E, $71, $42, $69, $00, $14, $42, $69, $00, $16, $42, $69, $00, $18, $33, $7C, $00, $03 ;0x280
	dc.b	$00, $1A, $33, $7C, $00, $03, $00, $1C, $61, $00 ;0x2A0
